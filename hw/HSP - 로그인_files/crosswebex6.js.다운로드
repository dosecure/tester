/**
 * INITECH INISAFE CrossWeb EX v3.1.18
 * Date : 2018-02-05
 * @copyright Initech Co., Ltd. All rights reserved.
*/

/************************************************************
 * @brief		기반 경로 설정
 ************************************************************/
var crosswebexBaseDir = "/initech/extension";
var INI_html5BasePath = "/initech/webui";

var IniSafeCrossWebEx = {};

/**
 * JS 로더
 * 
 * @private
 * @param {*} url				URL
 * @param {*} callback			콜백 함수
 * @param {*} charset			문자열 형식
 * @param {*} attribute			속성
 * @returns 리턴 없음.
 */
function jsloader(url, callback, charset, attribute) {
	var head = document.getElementsByTagName('head')[0];
	var script = document.createElement('script');
	script.type = "text/javascript";

	if (!charset) {
		script.charset = "utf-8";
	};

	script.src = url;

	if (attribute && (attribute.length > 0)) {
		for (var aint = 0; aint < attribute.length; aint++) {
			script.setAttribute(attribute[aint].key, attribute[aint].value);
		}
	}

	if (callback && typeof (callback) === typeof (Function)) {
		//Modern browsers (IE9+)
		if (script.addEventListener) {
			script.addEventListener('load', callback, false);
		}
		else//(IE8-)
		{
			script.onreadystatechange = function () {
				if (script.readyState in { loaded: 1, complete: 1 }) {
					script.onreadystatechange = null;
					callback();
				}
			};
		}
	}

	head.appendChild(script);
}

/**
 * JS 로더, promise
 * 
 * @private
 * @param {*} url			URL
 * @param {*} charset		문자열 형식
 * @param {*} attribute		속성
 * @returns					리턴 없음.
 */
function jsloaderWithPromise(url, charset, attribute) {
	return new Promise(function (jsloaderResolve, reject) {
		var head = document.getElementsByTagName('head')[0];
		var script = document.createElement('script');
		script.type = "text/javascript";

		if (!charset) {
			script.charset = "utf-8";
		};

		script.src = url;

		if (attribute && (attribute.length > 0)) {
			for (var aint = 0; aint < attribute.length; aint++) {
				script.setAttribute(attribute[aint].key, attribute[aint].value);
			}
		}


		//Modern browsers (IE9+)
		if (script.addEventListener) {
			script.addEventListener('load', jsloaderResolve, false);
		}
		else//(IE8-)
		{
			script.onreadystatechange = function () {
				if (script.readyState in { loaded: 1, complete: 1 }) {
					script.onreadystatechange = null;
					jsloaderResolve();

				}
			};
		}

		head.appendChild(script);
	});
}

/**
 * CSS 로더
 *
 * @private
 * @param {*} url			URL
 * @param {*} callback		콜백함수
 * @param {*} charset		문자열 형식
 * @returns 리턴 없음.
 */
function cssloader(url, callback, charset) {
	var head = document.getElementsByTagName('head')[0];
	var css = document.createElement('link');
	css.rel = "stylesheet";
	css.type = "text/css";
	if (!charset) {
		css.charset = "utf-8";
	};
	css.href = url;
	head.appendChild(css);
	if (callback) {
		callback();
	}
}

/**
 * CSS 로더, promise
 *
 * @private
 * @param {*} url			URL
 * @param {*} charset		문자열 형식
 * @returns 리턴 없음.
 */
function cssloaderWithPromise(url, charset) {
	return new Promise(function (cssloaderResolve, cssloaderReject) {
		var head = document.getElementsByTagName('head')[0];
		var css = document.createElement('link');
		css.rel = "stylesheet";
		css.type = "text/css";
		if (!charset) {
			css.charset = "utf-8";
		};
		css.href = url;
		head.appendChild(css);
		cssloaderResolve();
	});
}

/**
 * 플랫폼 정보 취득
 *
 * @export
 * @returns platformInfo 플랫폼 정보
 */
function INI_getPlatformInfo() {
	var platformInfo = {
		Windows: false, Linux: false, Ubuntu: false, Fedora: false, Mac: false, iOS: false, Android: false,
		Mobile: false, x64: false,
		type: "unknown", name: "unknown"
	};
	platformInfo.name = navigator.platform;
	if (navigator.appVersion.match("WOW64")) platformInfo.name = "WOW64";

	if (platformInfo.name.match(/Win32/i) || platformInfo.name.match(/WOW64/i)) {
		platformInfo.Windows = true;
		platformInfo.type = "Windows";
		if (navigator.appVersion.match(/Win64/i)) {
			platformInfo.name = "Win64";
			platformInfo.x64 = true;
			platformInfo.type = "Windows64";
		}
	} else if (platformInfo.name.match("Win64")) {
		platformInfo.Windows = true;
		platformInfo.x64 = true;
		platformInfo.type = "Windows64";
	} else if (platformInfo.name.match("Linux armv")) {
		platformInfo.Mobile = true;
		platformInfo.Android = true;
		platformInfo.type = "Android";
	} else if (platformInfo.name.match(/Linux/i)) {
		platformInfo.Linux = true;
		platformInfo.type = "Linux";
		if (platformInfo.name.match(/x86_64/i)) {
			platformInfo.x64 = true;
			platformInfo.type = "Linux64";
		} else if (navigator.userAgent.match(/x86_64/i)) { //Opera
			platformInfo.x64 = true;
			platformInfo.type = "Linux64";
		}
		if (navigator.userAgent.match(/Fedora/i)) {
			platformInfo.Fedora = true;
			platformInfo.type = "Fedora";
			if (platformInfo.x64) platformInfo.type = "Fedora64";
		} else if (navigator.userAgent.match(/Ubuntu/i)) {
			platformInfo.Ubuntu = true;
			platformInfo.type = "Ubuntu";
			if (platformInfo.x64) platformInfo.type = "Ubuntu64";
		} else if (navigator.userAgent.match(/Android/i)) { //modify 20150903: Samsung Galaxy Edge
			platformInfo.Linux = false;
			platformInfo.Mobile = true;
			platformInfo.Android = true;
			platformInfo.type = "Android";
		}
	} else if (platformInfo.name.match(/MacIntel/i)) {
		platformInfo.Mac = true;
		platformInfo.type = "Mac";
	} else if (platformInfo.name == "iPad"
		|| platformInfo.name == "iPhone"
		|| platformInfo.name == "iPod"
		|| platformInfo.name == "iOS") {
		platformInfo.Mobile = true;
		platformInfo.iOS = true;
		platformInfo.type = "iOS";
	}

	if ((navigator.userAgent.match(/iPhone/i)) ||
		(navigator.userAgent.match(/iPod/i)) ||
		(navigator.userAgent.match(/iPad/i)) ||
		(navigator.userAgent.match(/Android/i))) {
		platformInfo.Mobile = true;
	}
	if ((navigator.userAgent.match(/Windows Phone/i)) ||
		(navigator.userAgent.match(/Windows CE/i)) ||
		(navigator.userAgent.match(/Symbian/i)) ||
		(navigator.userAgent.match(/BlackBerry/i))) {
		platformInfo.Mobile = true;
	}

	//modify/remove system type
	if (navigator.userAgent.match("Android") && navigator.userAgent.match("Opera Mini")) {
		platformInfo.Mobile = true;
		platformInfo.Android = true;
		platformInfo.type = "Android";
	}
	return platformInfo;
}

/**
 * HTML5 지원 여부
 * 
 * @private
 * @returns {boolean}	true: HTML5 지원, false: HTML5 지원 안함
 */
var GINI_supportHtml5 = function () {

	if (INI_getPlatformInfo().Mobile) {
		return true;
	}

	var agentInfo = navigator.userAgent.toLowerCase();
	var app, ver;

	// IE 6
	if (agentInfo.indexOf("msie 6") != -1) {
		// HTML5 지원 안함
		return false;
	// IE 7
	} else if (agentInfo.indexOf("msie 7") != -1) {
		// HTML5 지원 안함
		return false;
	// IE 8
	} else if (agentInfo.indexOf("msie 8") != -1) {
		// HTML5 지원 안함
		return false;
	// IE 9
	} else if (agentInfo.indexOf("msie 9") != -1) {
		// HTML5 지원 안함
		return false;
	// IE 10
	} else if (agentInfo.indexOf("msie 10") != -1) {
		// HTML5 지원 안함
		return true;
	} else if (agentInfo.indexOf("edge") != -1) {
		ver = getInternetVersion("Edge");
		console.log('Browser : Edge version: ' + ver);
		// HTML5 지원 안함
		if (ver < 13) {
			return false;
		}

	//Non IE	
	} else {
		
		// OPERA
		if (agentInfo.indexOf("opr") != -1) {
			ver = getInternetVersion("OPR");
			console.log('Browser : OPR version: ' + ver);
			if (ver < 27) {
				return false;
			}

		// OPERA
		} else if (agentInfo.indexOf("opera") != -1) {
			if (agentInfo.indexOf("Version") != -1) {
				ver = getInternetVersion("Version");
			}
			else {
				ver = getInternetVersion("Opera");
			}	
			console.log('Browser : Opera version: ' + ver);
			if (ver < 27) {
				return false;
			}
		 
		// CHROME
		} else if (agentInfo.indexOf("chrome") != -1) {
			ver = getInternetVersion("Chrome");
			console.log('Browser : Chrome version: ' + ver);
			if (ver < 38) {
				return false;
			}
		 
		// FIREFOX
		} else if (agentInfo.indexOf("firefox") != -1) {
			ver = getInternetVersion("Firefox");
			console.log('Browser : Firefox version: ' + ver);
			if (ver < 37) {
				return false;
			}
		 
		// SAFARI
		} else if (agentInfo.indexOf("safari") != -1) {
			if (agentInfo.indexOf("Version") != -1) {
				ver = getInternetVersion("Version");
			}
			else {
				ver = getInternetVersion("Safari");
			}
			
			console.log('Browser : Safari version: ' + ver);
			if (ver < 6) {
				return false;
			}
		   }

	}	

	return true;
}

/**
 * 브라우저별 버전 정보 취득
 *
 * @private
 * @param {string} ver		브라우저별 버전을 구분하는 키워드(ex. Chrome, Firefox, Version, Safari, etc)
 * @returns {int}			정수형 버전 정보		
 */
function getInternetVersion(ver) {
	var rv = -1; // Return value assumes failure.
	var ua = navigator.userAgent;
	var re = null;
   
	if (ver == "MSIE") {
	 re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
	} else if (ver == "Edge") {
		re = new RegExp(ver + "/([0-9]{1,})(\\.{0,}[0-9]{0,1})");
	}
	else {
		re = new RegExp(ver + "/([0-9]{1,}[\.0-9]{0,})");
	 	  
	}
   
	if (re.exec(ua) != null) {
	 rv = parseFloat(RegExp.$1);
	}
	return rv;
   }

/**
 * 구간 암호화 지원 여부
 *
 * @private
 * @returns {boolean} 	true: 구간 암호화 적용, false: 구간 암호화 적용 안함.
 */
var GINI_supportEncryptHtml5 = function () {
	return true;
}

/************************************************************
 * @brief		스크립트 로드
 ************************************************************/
var GINI_DYNAMIC_LOAD = (function () {

	var dummyTime = "?dt=" + (new Date()).getTime();
	var loadCSSAndScript = function () {

		// Mobile 로드
		if (INI_getPlatformInfo().Mobile) {
			var afterLoadPromise = function () {
				// css
				var loadCss = function () {
					return new Promise(function (loadCssResolve, loadCssReject) {
						cssloaderWithPromise(INI_html5BasePath + "/res/css/jqueryui/jquery-ui.css", "utf-8")
							.then(function () {
								return cssloaderWithPromise(INI_html5BasePath + "/res/css/jqueryui/jquery-ui.theme.css", "utf-8");
							}).then(function () {
								return cssloaderWithPromise(INI_html5BasePath + "/res/css/initechBlueCommon.css", "utf-8");
							}).then(function () {
								if (INI_getPlatformInfo().iOS) {
									return cssloaderWithPromise(INI_html5BasePath + "/res/css/mobile/m_certificate_ios.css", "utf-8");
								} else {
									return cssloaderWithPromise(INI_html5BasePath + "/res/css/mobile/m_certificate.css", "utf-8");
								}
							}).then(function () {
								return cssloaderWithPromise(INI_html5BasePath + "/res/css/mobile/m_color_blue.css", "utf-8");
							}).then(function () {
								loadCssResolve();
							})
					});
				};

				// 라온키패드
				var loadTransKey = function () {
					return new Promise(function (loadTransKeyResolve, loadTransKeyReject) {
						jsloaderWithPromise("/SW/vender/mTranskey/rsa_oaep_files/rsa_oaep-min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/mTranskey/jsbn/jsbn-min.js" + dummyTime, "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/SW/vender/mTranskey/TranskeyLibPack_op.js" + dummyTime, "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/transkeyServlet?op=getToken&" + new Date().getTime(), "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/SW/vender/mTranskey/transkey.js" + dummyTime, "utf-8");
							}).then(function () {
								return cssloaderWithPromise("/SW/vender/mTranskey/transkey.css", "utf-8");
							}).then(function () {
								loadTransKeyResolve();
							});
					});
				};

				// 안랩키패드
				var loadAhnlabKey = function () {
					return new Promise(function (loadAhnlabKeyResolve, loadAhnlabKeyReject) {
						jsloaderWithPromise("/SW/vender/ahnlab/astx2.min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/ahnlab/astx2_custom.js" + dummyTime, "utf-8");
							}).then(function () {
								loadAhnlabKeyResolve();
							});
					});
				};

				// 유니키패드
				var loadUniwebKey = function () {
					return new Promise(function (loadUniwebKeyResolve, loadUniwebKeyReject) {
						jsloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/js/uniwebkey_sp_20161214.min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/js/uniwebkey_can_debug_20160812.min.js" + dummyTime, "utf-8");
							}).then(function () {
								return cssloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/css/uniwebkey_w2ui.css" + dummyTime, "utf-8");
							}).then(function () {
								loadUniwebKeyResolve();
							});
					});
				};

				// manifest
				var loadManifest = function () {
					return new Promise(function (loadManifestResolve, loadManifestReject) {
						($ || jQuery).ajax({
							dataType: "json",
							url: INI_html5BasePath+"/manifest.json?bust=" + new Date().getTime(),
							async: false,
							success: function (response) {
								window["GINI_MANIFEST"] = response;
								loadManifestResolve();
							}
						});
					});
				};

				
				// CrossKey manifest
				var loadCrossKeyManifest = function () {
					return new Promise(function (loadManifestResolve, loadManifestReject) {
						($ || jQuery).ajax({
							dataType: "json",
							url: "/SW/vender/CrossKey/manifest.json?bust=" + new Date().getTime(),
							async: false,
							success: function (response) {
								window["GCROSSKEY_MANIFEST"] = response;
								loadManifestResolve();
							}
						});
					});
				};

				// CrossKey
				var loadCrossKey = function () {
					return new Promise(function (loadCrossKeyResolve, loadCrossKeyReject) {
						loadCrossKeyManifest().then(function(){
							return jsloaderWithPromise(GCROSSKEY_MANIFEST["CrossKey.js"], "utf-8");
						}).then(function () {
							return jsloaderWithPromise("/SW/vender/CrossKey/CrossKeyIntf.js" + dummyTime, "utf-8");
						}).then( function() {
							loadCrossKeyResolve();
						});
					});
				};
				/*
				var loadCrossKey = function () {
					return new Promise(function (loadCrossKeyResolve, loadCrossKeyReject) {
						jsloaderWithPromise("/CrossKey/CrossKey.js" + dummyTime, "utf-8")
						.then(function () {
							return jsloaderWithPromise("/CrossKey/CrossKeyIntf.js" + dummyTime, "utf-8");
						}).then( function() {
							loadCrossKeyResolve();
						});
					});
				};
				*/
				
				var loadRelayJS = function () {
					return new Promise(function (resolve, reject) {
						if (Html5Adaptor.GetDefaultConf().OpenStorage && Html5Adaptor.GetDefaultConf().OpenStorage.USE == "Y"
						&& INI_getPlatformInfo().iOS) {
							jsloader(Html5Adaptor.GetDefaultConf().OpenStorage.RELAY_CERT_URL + dummyTime, resolve, "utf-8");
						} else {
							resolve();
						}
					});
				};

				var loadcwui = function() {
					return new Promise(function(loadcwuiRelove, loaccwuiReject) {
						loadManifest().then(function(){
							Promise.all([
								jsloaderWithPromise(GINI_MANIFEST["INIforgeCrypto.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui_conf.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui_core.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui.js"])
							]).then(function(){
								console.log("cwui load");
								var wait_cwui = function() {
									if ( cwui.isReady === true ) {
										loadcwuiRelove();
									} else {
										setTimeout(wait_cwui, 5);
									}
								};
								setTimeout(wait_cwui, 0); 
							});
						})
					});
				}

				Promise.all([
					//loadCrossKey()
					//, loadTransKey()
					//, loadUniwebKey()
					jsloaderWithPromise(INI_html5BasePath + "/cw_web6_neo_adt.js" + dummyTime, "utf-8")
					, jsloaderWithPromise(INI_html5BasePath + "/initechGlobal.js" + dummyTime, "utf-8")
					, loadCss()
				]).then(function () {
					return loadcwui();
				}).then(function () {
					return loadRelayJS();
				}).then(function () {
					return jsloaderWithPromise(INI_html5BasePath + "/3rd_interface.js" + dummyTime, "utf-8");
				}).then(function () {
					changeThirdPartyCompleted();
				});
			};

			// promise 라이브러리가 완전히 로드된 후에 진행한다.
			//document.write("<script type='text/javascript' src='https://fidoweb.yessign.or.kr:3100/v2/opencert.js'></script>");
			jsloader(crosswebexBaseDir + "/common/js/bluebird-3.5.0.min.js" + dummyTime, afterLoadPromise, "utf-8");
			//jsloader(INI_html5BasePath + "/lib/promise/bluebird-3.5.0.min.js" + dummyTime, afterLoadPromise, "utf-8");

			// PC 로드
		} else {
			/************************************************************
			 * CrossWeb EX JavaScript 로딩
			 ************************************************************/
			//document.write("<script type='text/javascript' src='https://fidoweb.yessign.or.kr:3100/v2/opencert.js'></script>");

			var afterLoadPromise = function () {
				// 라온키패드
				var loadTransKey = function () {
					return new Promise(function (loadTransKeyResolve, loadTransKeyReject) {
						jsloaderWithPromise("/SW/vender/Transkey/rsa_oaep_files/rsa_oaep-min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/Transkey/jsbn/jsbn-min.js" + dummyTime, "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/SW/vender/Transkey/TranskeyLibPack_op.js" + dummyTime, "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/transkeyServlet?op=getToken&" + new Date().getTime(), "utf-8");
							}).then(function () {
								return jsloaderWithPromise("/SW/vender/Transkey/transkey.js" + dummyTime, "utf-8");
							}).then(function () {
								return cssloaderWithPromise("/SW/vender/Transkey/transkey.css", "utf-8");
							}).then(function () {
								loadTransKeyResolve();
							});
					});
				};

				// 안랩키보드
				var loadAhnlabKey = function () {
					return new Promise(function (loadAhnlabKeyResolve, loadAhnlabKeyReject) {
						jsloaderWithPromise("/SW/vender/ahnlab/astx2.min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/ahnlab/astx2_custom.js" + dummyTime, "utf-8");
							}).then(function () {
								loadAhnlabKeyResolve();
							});
					});
				};

				// 유니키패드
				var loadUniwebKey = function () {
					return new Promise(function (loadUniwebKeyResolve, loadUniwebKeyReject) {
						jsloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/js/uniwebkey_sp_20161214.min.js" + dummyTime, "utf-8")
							.then(function () {
								return jsloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/js/uniwebkey_can_debug_20160812.min.js" + dummyTime, "utf-8");
							}).then(function () {
								return cssloaderWithPromise("/SW/vender/unikey/keypad/uniwebkey/css/uniwebkey_w2ui.css" + dummyTime, "utf-8");
							}).then(function () {
								loadUniwebKeyResolve();
							});
					});
				};

				// manifest
				var loadManifest = function () {
					return new Promise(function (loadManifestResolve, loadManifestReject) {
						($ || jQuery).ajax({
							dataType: "json",
							url: INI_html5BasePath+"/manifest.json?bust=" + new Date().getTime(),
							async: false,
							success: function (response) {
								window["GINI_MANIFEST"] = response;
								loadManifestResolve();
							}
						});
					});
				};

				// css
				var loadCss = function () {
					return new Promise(function (loadCssResolve, loadCssReject) {
						cssloaderWithPromise(INI_html5BasePath + "/res/css/jqueryui/jquery-ui.css", "utf-8")
							.then(function () {
								return cssloaderWithPromise(INI_html5BasePath + "/res/css/jqueryui/jquery-ui.theme.css", "utf-8");
							}).then(function () {
								return cssloaderWithPromise(INI_html5BasePath + "/res/css/pc_certificate.css", "utf-8");
							}).then(function () {
								loadCssResolve();
							})
					});
				};
				
				// CrossKey manifest
				var loadCrossKeyManifest = function () {
					return new Promise(function (loadManifestResolve, loadManifestReject) {
						($ || jQuery).ajax({
							dataType: "json",
							url: "/SW/vender/CrossKey/manifest.json?bust=" + new Date().getTime(),
							async: false,
							success: function (response) {
								window["GCROSSKEY_MANIFEST"] = response;
								loadManifestResolve();
							}
						});
					});
				};

				// CrossKey
				var loadCrossKey = function () {
					return new Promise(function (loadCrossKeyResolve, loadCrossKeyReject) {
						loadCrossKeyManifest().then(function(){
							return jsloaderWithPromise(GCROSSKEY_MANIFEST["CrossKey.js"], "utf-8");
						}).then(function () {
							return jsloaderWithPromise("/SW/vender/CrossKey/CrossKeyIntf.js" + dummyTime, "utf-8");
						}).then( function() {
							loadCrossKeyResolve();
						});
					});
				};
				/*
				var loadCrossKey = function () {
					return new Promise(function (loadCrossKeyResolve, loadCrossKeyReject) {
						jsloaderWithPromise("/CrossKey/CrossKey.js" + dummyTime, "utf-8")
						.then(function () {
							return jsloaderWithPromise("/CrossKey/CrossKeyIntf.js" + dummyTime, "utf-8");
						}).then( function() {
							loadCrossKeyResolve();
						});
					});
				};
				*/
				var loadIniPattern = function() {
					return new Promise(function(loadIniPatternResolve, loadIniPatternReject) {
						jsloaderWithPromise("/SW/vender/inipattern/inipattern_v1.0.5.ie.min.js" + dummyTime, "utf-8")
						.then(function() {
							return cssloaderWithPromise("/SW/vender/inipattern/fontium/css/fontium.css" + dummyTime, "utf-8");
						}).then(function() {
							return cssloaderWithPromise("/SW/vender/inipattern/css/inipattern_popup.css" + dummyTime, "utf-8");
						}).then(function() {
							loadIniPatternResolve();
						});
					});
				};

				var loadcwui = function() {
					return new Promise(function(loadcwuiRelove, loaccwuiReject) {
						loadManifest().then(function(){
							Promise.all([
								jsloaderWithPromise(GINI_MANIFEST["INIforgeCrypto.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui_conf.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui_core.js"]),
								jsloaderWithPromise(GINI_MANIFEST["cwui.js"])
							]).then(function(){
								console.log("cwui load");
								var wait_cwui = function() {
									if ( cwui.isReady === true ) {
										loadcwuiRelove();
									} else {
										setTimeout(wait_cwui, 5);
									}
								};
								setTimeout(wait_cwui, 0); 
							});
						})
					});
				}

				if (true === GINI_supportHtml5() && false === useOnlyCS) {
					Promise.all([
						//loadCrossKey()
						//, loadTransKey()
						//, loadAhnlabKey()
						//, loadUniwebKey()
						//, loadIniPattern()
						jsloaderWithPromise(INI_html5BasePath + "/cw_web6_neo_adt.js" + dummyTime, "utf-8")
						, jsloaderWithPromise(INI_html5BasePath + "/initechGlobal.js" + dummyTime, "utf-8")
						, loadCss()
					]).then(function () {
						return loadcwui();
					}).then(function () {
						return jsloaderWithPromise(INI_html5BasePath + "/3rd_interface.js" + dummyTime, "utf-8");
					}).then(function () {
						changeThirdPartyCompleted();
					});
				} else {
					changeCompleted();
					changeThirdPartyCompleted();
				}
			};

			// promise 라이브러리가 완전히 로드된 후에 진행한다.
			jsloader(crosswebexBaseDir + "/common/js/bluebird-3.5.0.min.js" + dummyTime, afterLoadPromise, "utf-8");
			//jsloader(INI_html5BasePath + "/lib/promise/bluebird-3.5.0.min.js" + dummyTime, afterLoadPromise, "utf-8");

			// ie8/9인 경우, JSON을 브라우저가 기본 제공하지 않기 때문에 무조건 앞단에서 로드하도록 변경
			if ( (navigator.userAgent.match(/msie 8/i)) || (navigator.userAgent.match(/msie 9/i)) ) {
				JSON = {};
				// jsloader(CROSSWEBEX_CONST.json2Path, function () { return false; }, "utf-8");
				document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/common/js/json2.js" + "'></script>");
			}

			document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/cw_web6_adt.js" + dummyTime + "'></script>");
			document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/common/js/exproto.js" + dummyTime + "'></script>");
			document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/common/exinstall.js" + dummyTime + "'></script>");
			document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/common/exinterface.js" + dummyTime + "'></script>");
			document.write("<script type='text/javascript' src='" + crosswebexBaseDir + "/crosswebexInit.js" + dummyTime + "'></script>");
		}
	};


	// CS만 사용할 경우 true // promise(bluebird)라이브러리는 로드해야 한다.
	var useOnlyCS = false;

	var completed = false;
	var thirdPartyCompleted = false;

	var moduleLoad = function () {
		loadCSSAndScript();
	};

	var changeCompleted = function () {
		completed = true;
	};

	var isCompleted = function () {
		return completed;
	};

	var changeThirdPartyCompleted = function () {
		thirdPartyCompleted = true;
	};

	var isThirdPartyCompleted = function () {
		return thirdPartyCompleted;
	};

	var isUseOnlyCS = function () {
		return useOnlyCS;
	};

	return {
		moduleLoad: moduleLoad,
		changeCompleted: changeCompleted,
		isCompleted: isCompleted,
		isThirdPartyCompleted: isThirdPartyCompleted,
		isUseOnlyCS: isUseOnlyCS
	}
})();

GINI_DYNAMIC_LOAD.moduleLoad();


/************************************************************
 * @brief		CrossWeb EX 클라이언트 변수
 ************************************************************/
var importURL = window.location.protocol + "//" + window.location.host + "/SW/initech/webui/certRelay/GetCertificate_v12.jsp";
var exportURL = window.location.protocol + "//" + window.location.host + "/SW/initech/webui/certRelay/GetCertificate_v12.jsp";

var TimeURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + "/common/tools/RpSync.jsp";
var RandomURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + "/common/tools/Random.jsp";
var PCRandomURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + "/common/tools/PCRandom.jsp";
var E2ERandomURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + "/common/tools/E2E_Random.jsp";
var SSIDNonceURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + "/common/tools/SSIDNonce.jsp";
var LogoURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + '/img/logo.demo.initech.com_TRUSTWEX.jpg';
var TrustBannerURL = window.location.protocol + "//" + window.location.host + crosswebexBaseDir + '/img/voice.demo.initech.com.jpg';
var InitechPrivateIssueURL = window.location.protocol + "//" + window.location.host + "/initech/demo/pc/crossweb_ex_web6/cert_center_private/issue_json_result.jsp";
var EncFlag = 10;
var VerifyFlag = 11;
var CrossWebSpanTag = "CrossWeb_Extension";

var cipher = "SEED-CBC";
var hashalg = "SHA256";

var turl = TimeURL;
var rurl = RandomURL;

var CAIPInfo = {
	//인증서 발급/갱신/폐기 관련 CA 정보(리얼)
	real: {
		yessign: "203.233.91.71",			// 금결원 리얼 CA 서버
		crosscert: "211.192.169.90",		// 전자인증 리얼 CA 서버
		signkorea: "210.207.195.100",		// 코스콤 리얼 CA 서버
		signgate: "211.35.96.43",			// 정보인증 리얼 CA 서버
		inipass: "220.90.214.15",			// INIPASS 리얼 CA 서버
		initech: "211.219.156.139"             //INITECH 테스트 CA 서버
	},
	//인증서 발급/갱신/폐기 관련 CA 정보(2048용 테스트)
	test: {
		yessign: "203.233.91.231",			// 금결원 테스트 CA 서버
		crosscert: "211.180.234.201",		// 전자인증 테스트 CA 서버 ( 201 서버가 안될 경우, 205 서버로 접속 211.180.234.205 )
		signkorea: "211.175.81.101",		// 코스콤 테스트 CA 서버
		signgate: "114.108.187.156",		// 정보인증 테스트 CA 서버 ( 156 서버가 안될 경우, 61.72.247.156로 변경 )
		inipass: "220.90.214.135",			// INIPASS 테스트 CA 서버
		initech: "211.219.156.139"             //INITECH 테스트 CA 서버
	}
};

var YessignCAIP;		//금결원 CA 서버
var CrossCertCAIP;		//전자인증 CA 서버
var SignKoreaCAIP;		//코스콤 CA 서버
var SignGateCAIP;		//정보인증 CA 서버
var INIPassCAIP;		//INIPASS CA 서버
var InitechCAIP;        //이니텍 사설인증서 CA서버

var YessignCMPPort = "4512";
var CrossCertCMPPort = "4512";
var SignKoreaCMPPort = "4099";
var SignGateCMPPort = "4502";
var INIPassCMPPort = "4512";
var InitechCAPort = "4007";

var InitechPackage = "INITECH";
var YessignPackage = "YESSIGN";
var CrossCertPackage = "CROSSCERT";
var SignKoreaPackage = "SIGNKOREA";
var SignGatePackage = "SIGNGATE";
var INIPassPackage = "INIPASS";

// INITECH CA
var Initech_CAPackage = "INITECH_CA";
var Initech_CAIP = "dev.initech.com";
var Initech_CMPPort = "28088";	// HTTP
//var Initech_CMPPort = "28089";	// TCP
//var Initech_CMPPort = "8200";
var CANAME = "INITECHCA";

// 고객사 적용시 아래 HOST 를 반드시 수정해 주세요.

// 고객사 개발 HOST
var CW_DEV_HOST = window.location.host;
// 고객사 테스트 HOST
var CW_TEST_HOST = window.location.host;
// 고객사 운영 HOST
var CW_REAL_HOST = window.location.host;

// 서버 인증서 default(2022.05.18~2042.05.18)
var SCert = "-----BEGIN CERTIFICATE-----\nMIIDtDCCApygAwIBAgIDAhOCMA0GCSqGSIb3DQEBCwUAMFMxCzAJBgNVBAYTAktS\nMRAwDgYDVQQKEwdJTklURUNIMREwDwYDVQQLEwhQbHVnaW5DQTEfMB0GA1UEAxMW\nSU5JVEVDSCBQbHVnaW4gUm9vdCBDQTAeFw0yMjA1MTgwNTMyMzdaFw00MjA1MTgw\nNTMyMzZaMD8xCzAJBgNVBAYTAktSMRIwEAYDVQQKEwlJTklURUNIQ0ExHDAaBgNV\nBAMTE2RlZmF1bHQuaW5pdGVjaC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQCBZ5bD/o/qCKSZE7saWEZ8BCV6L3wLiBQ3ST5erNgjuM1ptzOQLNwe\nTX25J+1SCb/4zyArOj05UAcs2dCdrf2dA/F9v+jXy+mwEvz6kbW41ekNfOurxlOq\nAKMlvpZaG61PV18WXZYpnk8+9oFQHOzDC8ZVypI2Hbh8lxGxOEtZHdgEGTDNSH2O\nNvUGPfEk3O6DuaKE7bl3vcWv+SG+8+FMNbbL3FR+E+npUzZ73DJBlJKdaMekEYfC\nFxjBSVumcUhXfT6UVa36gQVuZpMCsVK11YBibphahqnrhN+XEQBw6DRIRRBpca0P\niQ97hcY26VH0okuZqcNls5AEQGmc4dbZAgMBAAGjgaQwgaEwHwYDVR0jBBgwFoAU\ndZHynOrUueejpV93hNuhGg0Yi6UwHQYDVR0OBBYEFO5/jqjGh57IkM5MNt61b9vA\na8UWMA4GA1UdDwEB/wQEAwIB/jAMBgNVHRMBAf8EAjAAMEEGA1UdHwQ6MDgwNqA0\noDKGMGh0dHA6Ly9kZXYuaW5pdGVjaC5jb206NDgyMDAvQ1JML0lOSVRFQ0hDQTEz\nLmNybDANBgkqhkiG9w0BAQsFAAOCAQEAX/1TsVD9E+ZNmstHLnmaYRijdluVWIcx\nmUNA5OMn4o/au9x5SbyO++1kpmvodE8v12KIx0q/eXO72UpeSfzlTu/8qBGC+ajw\nUmt0+Ik60aQRFVvq/7Dcilj2Xh1DMRK2mXL76hiZJZTR0KOygzWFMha0eEfkcklH\ndR7/5eQ93s6vE+/5zm7CIq/R9mpWn0xgxaOv93TMK5Z83dmpIOuoB+WBwSN2zTc5\nybr6SUtHeJepGoYYsWbpkI3LjcP+oq5LbexkeKTknDSHa1lPpKIGjCAleubBeQhS\nSClqPQ9bRDCPhA6W9nm4e5bhc74HoCkdLXSXIMuydbXVUvHwzPWHZA==\n-----END CERTIFICATE-----\n";

// Real-CA 인증서 (2048)
var realYessignClass2_2048 = "-----BEGIN CERTIFICATE-----\nMIIGDjCCBPagAwIBAgICEBwwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTUxMDAy\nMDEzNDA1WhcNMjUxMDAyMDEzNDA1WjBSMQswCQYDVQQGEwJrcjEQMA4GA1UECgwH\neWVzc2lnbjEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRowGAYDVQQDDBF5ZXNzaWdu\nQ0EgQ2xhc3MgMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKXC/hP9\nvF6PPP10R6jNcjptiIUxBg8uiqIKhLKKrBT4iBIBJA9/emG1hZpvi/CAGyGI18Ri\nZctzU8LFdsEbP+HSuuSXpbIHpUZ4xbm3zipeJx/hzu94KxwePcuQM+/p4UIZY0dK\n4ItV3s2oSsprENVAe6WCRcaeD5+5AvTlRDa6mvZyghJsoj5kPgpigixW9Ci3O4l5\nNyi2BtvlN0alPMeEvv6j32ACSPtXyBGI7PlM3zUoy5jj9HyDW7x2ZEO7b7yB1UZC\nI4UWMtKINm6eu73Imy4eL4fVJqUIkkER2OKPvSjLxeD8y6iFOT6UJsIg4r2By35I\nZmuMIAPG3s03G4ECAwEAAaOCAtowggLWMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8g\nQrJLfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEu\nMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEW\nMBQGA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQU79xE0saNwA6jOMB8\nk8bDQb9Kj/AwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEd\nBgRVHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3Iv\ncmNhL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXH\neMd4yZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUA\nIABpAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUA\nYwB0AHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYA\nIAB0AGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMCsG\nA1UdEQQkMCKgIAYJKoMajJpECgEBoBMwEQwP6riI7Jy16rKw7KCc7JuQMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjAYDVR0fBIGEMIGBMH+g\nfaB7hnlsZGFwOi8vZHMueWVzc2lnbi5vci5rcjozODkvQ049S0lTQS1Sb290Q0Et\nNCxPVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50cmFsLE89S0lT\nQSxDPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IB\nAQAhOe2oq/Uazi/nKMhM3W+H1y3GnVc9n+lfmmTA4PjM6U07h/hvCbFJQiDe6zoM\ne4lVu+YxGWDAEol5ZiSBAaGAjdJFy+uoYHqJP+33+jruj4j4c7/wK7wyAzSfjNwu\nNXThM8Aygkohv784o/2Vq7cxD4ZpVYOznb/0/MmLzl2mDYRsCtHrkADHloD7JGB6\n8/ESX6Y4sfNwsOFZ9saLDclQuEeZJ0pJMzkkGo3r8bGkxHo2VgJsVqBmiLk5RWP6\nsxAY2OVmaSObBYv1IhiovW+A3FSnY5LAvaSKWqKe+pq/3EwqBKvmMIF4/j7P0sA+\nIneqPXtp+T1FxODf4yT5reEu\n-----END CERTIFICATE-----\n";
var realSignKorea_CA3 = "-----BEGIN CERTIFICATE-----\nMIIGDTCCBPWgAwIBAgICECAwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTYwNTEz\nMDIzMzM1WhcNMjYwNTEzMDIzMzM1WjBQMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nU2lnbktvcmVhMRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFjAUBgNVBAMMDVNpZ25L\nb3JlYSBDQTMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8NWUKGJNd\nVCNqvd/QcILyO4isIUPttcnuEGBTgNYb1q66ChssV2rMZrazyT96PZwmMwusp7Np\n+TsmmifDJtRrzS3K2MiPEK7xubND8nlQqL3OC61QglqdPO5JYe75e7aHJGe/ijGz\nlnrTxEx2OpC27gZCHuheei8Hn2eN6HPA7YmmazSe5VEOS8f1jSFQFGKQFaO+28OO\ng4gzuSwE8uZ3UbeV1iWhvPybs52x3PV8/vqHGUKLBAIz8xKvEFsWHhxeh1VcbvDZ\nHVDVi1A0fNry2OMgW7QiCIhfo3i/EHKtUp4SL8NDJ8dfjseqSwNMCKxHXK9Edoq2\npo5v/d0VNDz1AgMBAAGjggLbMIIC1zCBjgYDVR0jBIGGMIGDgBTI0I7HSa4fIEKy\nS38TyXdYDKHNwaFopGYwZDELMAkGA1UEBhMCS1IxDTALBgNVBAoMBEtJU0ExLjAs\nBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRyYWwxFjAU\nBgNVBAMMDUtJU0EgUm9vdENBIDSCAQEwHQYDVR0OBBYEFARURbDeEsQnnKBPAmmL\n1VsUFGMHMA4GA1UdDwEB/wQEAwIBBjCCATEGA1UdIAEB/wSCASUwggEhMIIBHQYE\nVR0gADCCARMwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9yLmtyL3Jj\nYS9jcHMuaHRtbDCB3gYIKwYBBQUHAgIwgdEegc7HdAAgx3jJncEcspQAIKz1x3jH\neMmdwRzHhbLIsuQAKABUAGgAaQBzACAAYwBlAHIAdABpAGYAaQBjAGEAdABlACAA\naQBzACAAYQBjAGMAcgBlAGQAaQB0AGUAZAAgAHUAbgBkAGUAcgAgAEUAbABlAGMA\ndAByAG8AbgBpAGMAIABTAGkAZwBuAGEAdAB1AHIAZQAgAEEAYwB0ACAAbwBmACAA\ndABoAGUAIABSAGUAcAB1AGIAbABpAGMAIABvAGYAIABLAG8AcgBlAGEAKTAqBgNV\nHREEIzAhoB8GCSqDGoyaRAoBAaASMBAMDijso7wp7L2U7Iqk7L2kMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjgYDVR0fBIGGMIGDMIGAoH6g\nfIZ6bGRhcDovL2Rpci5zaWdua29yZWEuY29tOjM4OS9DTj1LSVNBLVJvb3RDQS00\nLE9VPUtvcmVhLUNlcnRpZmljYXRpb24tQXV0aG9yaXR5LUNlbnRyYWwsTz1LSVNB\nLEM9S1I/YXV0aG9yaXR5UmV2b2NhdGlvbkxpc3QwDQYJKoZIhvcNAQELBQADggEB\nAEi2H54k3tOF/fXAI0W20SiSOfizAX+t5qvJrV9ob1xDWeaTnLjSpu/IGNwcjWS7\nwseFyo2T95cEGMcmzMlIp/t0HopziXv4WC0mulAdk0yvynBQY9HcO5DzXWp83lYe\nU+CMB3UkBBaOAWU/aXQNxZUwnsn2wYoWq3OE4I6hHB33jSJZTYXTcHt4wkTa+BGO\nCu4cQOa6mtMiG12Zo+J3+360z4laRSmM/nQdVMYFLvdEJ8/3ki1MhEr3efhNE/8X\nwhtboEi7qXUH8MrViR6uUnKcMMySI+26N+Aim/itOqYCvhFmDY7619ttPk6ktefB\niIHMsKEv168n68Bm7l/GGRE=\n-----END CERTIFICATE-----\n";
var realSignGate_CA5 = "-----BEGIN CERTIFICATE-----\nMIIGCzCCBPOgAwIBAgICEB0wDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTUxMjI5\nMDc0NjI1WhcNMjUxMjI5MDc0NjI1WjBKMQswCQYDVQQGEwJLUjENMAsGA1UECgwE\nS0lDQTEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRUwEwYDVQQDDAxzaWduR0FURSBD\nQTUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCpiTEmAeOssny+ettR\nSdHJWXBkRgE+nUOe19z0HUuy1L6G7iUVyMhc7GSqJFkZtcDWqLx3cKkBe5Vd7Xxb\n8fr52tXI+sQBnOQkb+tpfj6RNisbJAkTAGukOTkaiTuhL0s+AhdCNdkknF4i7aa5\n3/NFD1XeOYVjnNwx2yz0gCY7jBb79UE6wB5h9qFyuHleiJCdlkNAeJIhe0cPWuak\ngj5kB1hpb7nW3lpiiSSDA99cG5x2oSlNzMfxX382CjsgvQclUp/Wz7kNl46fgrER\nTOsHN2N5A7nqxx8ipAfYyyy+lCnv9YE7xg13+5uzN0oRJCU1A7obMGRx5WwYeKMx\nXfTbAgMBAAGjggLfMIIC2zCBjgYDVR0jBIGGMIGDgBTI0I7HSa4fIEKyS38TyXdY\nDKHNwaFopGYwZDELMAkGA1UEBhMCS1IxDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsM\nJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRyYWwxFjAUBgNVBAMM\nDUtJU0EgUm9vdENBIDSCAQEwHQYDVR0OBBYEFNi+OuxFmcWe45zqgR/SHRKwNj6I\nMA4GA1UdDwEB/wQEAwIBBjCCATEGA1UdIAEB/wSCASUwggEhMIIBHQYEVR0gADCC\nARMwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9yLmtyL3JjYS9jcHMu\naHRtbDCB3gYIKwYBBQUHAgIwgdEegc7HdAAgx3jJncEcspQAIKz1x3jHeMmdwRzH\nhbLIsuQAKABUAGgAaQBzACAAYwBlAHIAdABpAGYAaQBjAGEAdABlACAAaQBzACAA\nYQBjAGMAcgBlAGQAaQB0AGUAZAAgAHUAbgBkAGUAcgAgAEUAbABlAGMAdAByAG8A\nbgBpAGMAIABTAGkAZwBuAGEAdAB1AHIAZQAgAEEAYwB0ACAAbwBmACAAdABoAGUA\nIABSAGUAcAB1AGIAbABpAGMAIABvAGYAIABLAG8AcgBlAGEAKTAuBgNVHREEJzAl\noCMGCSqDGoyaRAoBAaAWMBQMEu2VnOq1reygleuztOyduOymnTASBgNVHRMBAf8E\nCDAGAQH/AgEAMA8GA1UdJAEB/wQFMAOAAQAwgY4GA1UdHwSBhjCBgzCBgKB+oHyG\nemxkYXA6Ly9sZGFwLnNpZ25nYXRlLmNvbTozODkvQ049S0lTQS1Sb290Q0EtNCxP\nVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50cmFsLE89S0lTQSxD\nPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAj\nR/p1dqrwXm2xAwNUHukCvVKRrkIo0ReXWUXBawmFM7JDVYdiOWho87z427OCToFJ\njDxqw/iLQHMtIjfqpET2hRNIIFRsFKAnJEAhdboEf/zQ/++sAQBv/YRQLL0rxBVn\nq6ZGzCRsgAzLqc8d4wIC9bEQkPMNG5rFE3T36If82BZ7fDYVenvihwoEi/3khfT1\nnX46YnmHMybEx+5bnFsxnQdNiDV3DHuVKLR8DqsXJwMVLWOJcD+7UqRaTYx/dJsT\ng/RUKiIjlSlA6lnsfp+mGhQ5iW+jA96I8dGjlXLhtbFpQyyQ0VxoXRm7eb+MibHY\n761l+/Sg/GsciJBATsBK\n-----END CERTIFICATE-----\n";
var realCrossCertCA3 = "-----BEGIN CERTIFICATE-----\nMIIGEDCCBPigAwIBAgICEB4wDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTYwMTA1\nMDgyMTA1WhcNMjYwMTA1MDgyMTA1WjBPMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nQ3Jvc3NDZXJ0MRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFTATBgNVBAMMDENyb3Nz\nQ2VydENBMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMQh+483jjVm\nmqoGaWKLZyz81MObZq94RIPwq1kEQUu46umnobZaOamnVxB9ggJfJV34ugY95zEI\nqNOcMRGYXSfySd5uDvPVstwOb4vuMQDdrsHtcbRMIESsq6By8jKAvVbYV9T+RFyy\n4TOCiRfzyAIZeZ9kyHLze2Q3bAjeHgPWA/M+F7MAMtKhx8IB4NUa83rJ1mY6t35E\n8L7i7QoCX8/w7hu+W6DU+DbZBUk10kDUZqMP28h9k0brRnmCr8pcleuuOjymwaWu\nBWDhSavWpXwY4vGNHg4HZvdDsEPEXTwveQY3SoceENdJDiSOMzXvebwJlJVWDvFD\nTueYrSkmS9cCAwEAAaOCAt8wggLbMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8gQrJL\nfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEuMCwG\nA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEWMBQG\nA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQUQ9bzZX9lnc1rwc5zCr8y\nEKBR5xEwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEdBgRV\nHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNh\nL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXHeMd4\nyZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABp\nAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUAYwB0\nAHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYAIAB0\nAGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMC4GA1Ud\nEQQnMCWgIwYJKoMajJpECgEBoBYwFAwS7ZWc6rWt7KCE7J6Q7J247KadMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjgYDVR0fBIGGMIGDMIGA\noH6gfIZ6bGRhcDovL2Rpci5jcm9zc2NlcnQuY29tOjM4OS9DTj1LSVNBLVJvb3RD\nQS00LE9VPUtvcmVhLUNlcnRpZmljYXRpb24tQXV0aG9yaXR5LUNlbnRyYWwsTz1L\nSVNBLEM9S1I/YXV0aG9yaXR5UmV2b2NhdGlvbkxpc3QwDQYJKoZIhvcNAQELBQAD\nggEBAFmykQiYoAVr8mceqWYw3sI4wQWCASRqLHnB7QnhhehzzLIK+E3q/7vct6T/\niToq8I5s6R2DqUZB6LuTQY0IJnM/EUBVANuGT044IuhiIs5er14f4YaX58Q96l7j\nbTWyed8OtR1dvS84kPTdSDpDKgrk+IEvS7M2rNXj/Kkb1rSXRgpvxpyEECCevcZO\ngrdNnP96Il/7O/XaBVYQJIRi7k4aY4PoLP+k58xAVu+9zlMwRFRMJ3+w+l1fECzD\nHzIkQGGh4LRdrjrUoYbxMr2USHpaWq/mfzrWymuJrhi/xTxSoWw1cWEcz7i+JnLS\nJaXjggr4rRrzo0ilz2mEDUj6MUc=\n-----END CERTIFICATE-----\n";
var realTradeSignCA3 = "-----BEGIN CERTIFICATE-----\nMIIGFzCCBP+gAwIBAgICEB8wDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTYwMjI2\nMDIzNTA5WhcNMjYwMjI2MDIzNTA5WjBPMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nVHJhZGVTaWduMRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFTATBgNVBAMMDFRyYWRl\nU2lnbkNBMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANYyWa44JAH1\njOqVF3u4O4khr1K9hfZ7rkqLF6/Efbbhdvbcg3Mr29mz7rWemMhOvdwm3Dh2qVYM\nqD1K3tVaVALA93KbWzi54cDRg5jbbcgQqsg96B2ZqdbxgTdGXhPpPd+A8jJfdBr4\n95UUNUdEoM9lNi2hkFeVWCzC5z36IwOH9/vZOSz/hUkeHjtOeo4V17Iy64zQDy4q\n07kAM2rFzdApX8CnjhJHyK3JF/gQfi+9JYGVqgwVt8Crubeb3DKw3avDnVf3JPKe\nivaRxwftJm3Yr3Skzx8gJmkPdxTjIVbJrVFh1anm8OCJYD6ZPv18HPoxZPvmkfhh\nRh1pumT08LECAwEAAaOCAuYwggLiMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8gQrJL\nfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEuMCwG\nA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEWMBQG\nA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQUtQcjbFfPPq6OtTKBn5Gn\nINvo6+MwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEdBgRV\nHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNh\nL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXHeMd4\nyZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABp\nAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUAYwB0\nAHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYAIAB0\nAGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMDQGA1Ud\nEQQtMCugKQYJKoMajJpECgEBoBwwGgwY7ZWc6rWt66y07Jet7KCV67O07Ya17Iug\nMBIGA1UdEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjwYDVR0fBIGH\nMIGEMIGBoH+gfYZ7bGRhcDovL2xkYXAudHJhZGVzaWduLm5ldDozODkvQ049S0lT\nQS1Sb290Q0EtNCxPVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50\ncmFsLE89S0lTQSxDPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3\nDQEBCwUAA4IBAQCfvk0cqm1tyDuCC6Uqc5cFJ14aujinjeButBCiM1oa8A2GwCuK\nk6Mjr1m8V6mcx35ZTKUxpzJSQ+Dx2VzqLCskM5PShJuR1IG5lSobYXKsdjL4a+wy\n2fzQIafkEYg++y1Yte/g5VgXoSZPWL88EVt38NcRgGgRXf/cE/FBmwBpFcwkMe3o\n5AScjS5Lw8Af8ZH/YhOz6oIJzK1B7ph0b7PnNgYVKKdbID+MXMcXSOYg3R4uhrbk\nj1RUY4XxCE6phZN8llIoB//CwbDlZQZlf9K6gvTE+a/w4LofHpz/GbXWSBfiJB3o\ne9/Bx1Y4MA+6uR+KZiWUnDf2yW3W+V2bTEvn\n-----END CERTIFICATE-----\n";
var realINIPASS_CA = "-----BEGIN CERTIFICATE-----\nMIIGBjCCBO6gAwIBAgICECQwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMTgwODMw\nMDY1NTE4WhcNMjgwODMwMDY1NTE4WjBLMQswCQYDVQQGEwJLUjEQMA4GA1UECgwH\nSU5JUEFTUzEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRMwEQYDVQQDDApJTklQQVNT\nIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy90uIXg2g84ZPueM\nuME0MgCFTAXQZ8tUtJzmRiUD8fPkkf3wEq7CUR0McXnmMhx7tbKLoBNr0NOoZJTu\n76YkIawL5Mlh5YG7/31mn71cZH8jOnkuxXGOJ6eqpGIb9A2+jLwCUnmuyqj0Zas+\npT3gi9lwkUdjoUDHc0vsCsLPuwnMVw4mqTImhHNs8g+35Ak+PxxjNr6yU/qaEy7S\nCp2MSCuQmbPn0huxXVMD770qWyPw45FOEiahx0pQY4sw374dRRRsRe0iqSglP3tV\nbRfZk286kRLNgorSTP2h6yTxYiVMm3h9OrYRNufjNZu2MhbwEr6uZ7pacLdb5/xL\n9W3dywIDAQABo4IC2TCCAtUwgY4GA1UdIwSBhjCBg4AUyNCOx0muHyBCskt/E8l3\nWAyhzcGhaKRmMGQxCzAJBgNVBAYTAktSMQ0wCwYDVQQKDARLSVNBMS4wLAYDVQQL\nDCVLb3JlYSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBDZW50cmFsMRYwFAYDVQQD\nDA1LSVNBIFJvb3RDQSA0ggEBMB0GA1UdDgQWBBSjkYrDl1aGIhoLpRybVLIs+KKn\nBTAOBgNVHQ8BAf8EBAMCAQYwggEyBgNVHSABAf8EggEmMIIBIjCCAR4GBFUdIAAw\nggEUMDEGCCsGAQUFBwIBFiVodHRwczovL3d3dy5yb290Y2Eub3Iua3IvcmNhL2Nw\ncy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXHeMd4yZ3B\nHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABpAHMA\nIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUAYwB0AHIA\nbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYAIAB0AGgA\nZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMCoGA1UdEQQj\nMCGgHwYJKoMajJpECgEBoBIwEAwO7J2064uI7YWNKOyjvCkwEgYDVR0TAQH/BAgw\nBgEB/wIBADAPBgNVHSQBAf8EBTADgAEAMIGLBgNVHR8EgYMwgYAwfqB8oHqGeGxk\nYXA6Ly9kaXIuaW5pcGFzcy5jb206Mzg5L0NOPUtJU0EtUm9vdENBLTQsT1U9S29y\nZWEtQ2VydGlmaWNhdGlvbi1BdXRob3JpdHktQ2VudHJhbCxPPUtJU0EsQz1LUj9h\ndXRob3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAlKjeSbAs\nt/FlSiqdwq7rsPMuF97SomzxjmmE5i7zLkC0dPKLxdrZQ2TTaTEi6IO9skQ2T7aI\ntRS5anBVGscQP7w+H2d6IQSPO42miucGSaLds6jOvbEx7IV9TeiCTeapsYtppQz0\nHCX2krQcSLxRFtMRmmdkFoh6TQj2kc0Ddg8XsUncSIntD7Vai39yByq8rwlVeMrs\nEvUp1Ix95nHWHzTF2g7/yGEF0M1v2y/ZdNs5ptMvmDc/SF9qYCuley8HhOOaW0Zn\n8QgV/NkjH88puOzsVKufiZbQ9UbuLEDiGuRLur1ZMBGDda0rONw0UPm5vnQn9QRv\nKfbbi6qb+1me/w==\n-----END CERTIFICATE-----\n";
var realInitech_ca = "-----BEGIN CERTIFICATE-----\nMIIEBDCCAuygAwIBAgIBAzANBgkqhkiG9w0BAQsFADBTMQswCQYDVQQGDAJLUjEW\nMBQGA1UECgwNSU5JVEVDSF9JTklDQTEbMBkGA1UECwwSSU5JVEVDSF9JTklDQV9S\nT09UMQ8wDQYDVQQDDAZUU19QS0kwHhcNMjEwMTE3MTUwMDAwWhcNMzAwMTE4MTQ1\nOTU5WjBRMQswCQYDVQQGDAJLUjEWMBQGA1UECgwNSU5JVEVDSF9JTklDQTEZMBcG\nA1UECwwQSU5JVEVDSF9JTklDQV9DQTEPMA0GA1UEAwwGVFNfUEtJMIIBITANBgkq\nhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQBo9fi8np1t+BU471l9HR+Pu6zLM1r0tZQ7\nJPhrB8NBPJyp2SNZHTa7bUGUAOH6NyBwzjHOy0XM1ErJOf4CXU4vmKDPQvDTEDCi\nKVvI5/CU5Ck6kju/1NUsRoX6knN+AiC4vcQBsH67aM3C2CIO0EpPpf5n/6If1Yoo\na6IbLHauxip189G8YBaCwrIty55eGgfhyEz2WpyV+NiXrDh6HWhpiG+0Tns/h33o\nbCYHws8Y/rEybdYT/N/ba44Jwph0KXjydfwGqgaA7AT0fSqvDxkGwXclJPaOlSwl\nHvo19bqHCxTh5Gbab1PzFX3ejlEJTblZP4IkyhHieN8abu23O7cdAgMBAAGjgeUw\ngeIwHQYDVR0OBBYEFGOAzpROjVDdtzist4Y/Z5WvXCA8MHsGA1UdIwR0MHKAFHFs\nbcMZgaOFXH/pl0Ok7bgVDBByoVekVTBTMQswCQYDVQQGDAJLUjEWMBQGA1UECgwN\nSU5JVEVDSF9JTklDQTEbMBkGA1UECwwSSU5JVEVDSF9JTklDQV9ST09UMQ8wDQYD\nVQQDDAZUU19QS0mCAQEwDgYDVR0PAQH/BAQDAgHGMCAGA1UdJQEB/wQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAzASBgNVHRMBAf8ECDAGAQH/AgEAMA0GCSqGSIb3DQEB\nCwUAA4IBAQACnbdihIyBMHTHdgkOT6UDTLJlFEp/LD+bWUH2z29vA57eg3WnjB2w\nmKi7JmCSLBvr55UuZ2K1oT4fNpHpRtdDCvs75rTiZPDeEdTImkaqlQRKoGU2NJVw\nPUmcuhqz9bBsaYtr+ra63nUoa58UI73mZFSx+LHDmYSw7jMVcvfKHQOrzDr4ioRy\nKSfeuAqxameG0TCnuUB7HL7liMxOEtL8AUEDFPFs80Efe12lEPznfOg/Wu3KsiCa\nv7y/DBSLX+1dOET51yS7kGO+Ok8tlyW3DKxzgdzKV84XBnPt8dG1dv+qaJKDVlWf\n3l1KJypMU08rTltrYHInYAoi6UpAeTmy\n-----END CERTIFICATE-----";

// Real-CA 인증서 (2022년 3월 추가)
var realYessignClass3_2048 = "-----BEGIN CERTIFICATE-----\nMIIGDjCCBPagAwIBAgICECgwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMjAwNTE1\nMDcyNTIxWhcNMzAwNTE1MDcyNTIxWjBSMQswCQYDVQQGEwJrcjEQMA4GA1UECgwH\neWVzc2lnbjEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRowGAYDVQQDDBF5ZXNzaWdu\nQ0EgQ2xhc3MgMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKRTJ8DQ\nty6KyIhZJIWm5Nc5Ye2HWHo1nZNYuBNUCUNPuHvsjDvVg0IpJwq60RcL8rDX2ird\nxBBz2HYSZAL5kNPWeADjD3vrE+1pwqSSTlaofGQMEqcHgsGeaYznh2kUSWC/Wu5H\nq3W/NW5tSq+Bgqz9KgBt7jbHKV7NdapVDAwwbwj5DoFJRXRpgUWuJdGOxQTHgmzG\n2ksOAtQ0phjkb7MOK1k8gLOh0hONUv/CpEoxEEfHJ74A+Ysw9kAVUjTitrESYpPy\n6gBYGQoqwplAEFSsEvQgD0Hj+iPr6Chyrrqfl7uesYvzidZLSUooXkt1v+pkQ970\n9kX4+fEOUbl1YGECAwEAAaOCAtowggLWMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8g\nQrJLfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEu\nMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEW\nMBQGA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQU8oej5tleFhZyTtjC\nvIU5AzdZkMQwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEd\nBgRVHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3Iv\ncmNhL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXH\neMd4yZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUA\nIABpAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUA\nYwB0AHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYA\nIAB0AGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMCsG\nA1UdEQQkMCKgIAYJKoMajJpECgEBoBMwEQwP6riI7Jy16rKw7KCc7JuQMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjAYDVR0fBIGEMIGBMH+g\nfaB7hnlsZGFwOi8vZHMueWVzc2lnbi5vci5rcjozODkvQ049S0lTQS1Sb290Q0Et\nNCxPVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50cmFsLE89S0lT\nQSxDPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IB\nAQBExsytYNrlX1MuAo2Zvl1Wjh0JPFRXz1mQ8pB+ZHEM85RPw+unql9bax29NDqj\nIRQfUxlukv0HcLJ4IgJhowSipIcdKsPo5cIZ55svimJROclLTy8HYnjqk+3tVwy0\nMm181XDr48FBsmhGK79TlBOvfVmH2AEGwuD7e+1dSKpPPVqDp7mLS33UfAzKpL7P\n9wM1ZV15HuoTXQ9M6yMAik7eJRL7Nh8X8kCbxenH9p3adPNwYbqhn0HIQWCOLdra\nijWgfi03ykHagdtVA5VOdnrAKitWd9WOPHQc3Yxbi9xMyrgAOP2hNG7ehSkyeETh\n4TljL8xojH3Q+xOMkJUnZSb1\n-----END CERTIFICATE-----\n";
var realCrossCertCA4 = "-----BEGIN CERTIFICATE-----\nMIIGEDCCBPigAwIBAgICEC4wDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMjAwNjAy\nMDYzODM3WhcNMzAwNjAyMDYzODM3WjBPMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nQ3Jvc3NDZXJ0MRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFTATBgNVBAMMDENyb3Nz\nQ2VydENBNDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM4iN3RgJ3Z3\nIdbCRPI+l+w3KqShaiUAZjWfzXzvM0Hil4cuL7RXZOcXoo3dasNNQ6hXjYi8FIsN\ncRIBZdoJxffuAPP784fGlbw/iby3ds7iapLPn0NuWdr0sOc+Sb41VSnLLLH/LDS9\npbSDb9JcnN5+POAIhi/ie9210pkmERm49SeXuSGpOckG90XViEmY7Cupw+6LImay\nleFzB0GDR3dx9pISglKD/+9/voO38UW3skOZmY7oFuWgr4ol9/k1SKjhxGMbHEV1\nAYQbusBSEigl51z2p7zXtVpObJ8GDmYHpm8BbKEABs5qyZQVcl0CEjkohttszZDJ\n6cvJrizeLRsCAwEAAaOCAt8wggLbMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8gQrJL\nfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEuMCwG\nA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEWMBQG\nA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQUw1th2bREu6vAcVX2qzPO\n8z7cvaUwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEdBgRV\nHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNh\nL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXHeMd4\nyZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABp\nAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUAYwB0\nAHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYAIAB0\nAGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMC4GA1Ud\nEQQnMCWgIwYJKoMajJpECgEBoBYwFAwS7ZWc6rWt7KCE7J6Q7J247KadMBIGA1Ud\nEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjgYDVR0fBIGGMIGDMIGA\noH6gfIZ6bGRhcDovL2Rpci5jcm9zc2NlcnQuY29tOjM4OS9DTj1LSVNBLVJvb3RD\nQS00LE9VPUtvcmVhLUNlcnRpZmljYXRpb24tQXV0aG9yaXR5LUNlbnRyYWwsTz1L\nSVNBLEM9S1I/YXV0aG9yaXR5UmV2b2NhdGlvbkxpc3QwDQYJKoZIhvcNAQELBQAD\nggEBAJb2DClXfbGp7bZT5PTfLdKBRJtax2ktQOiL72EdciBy9SvBLHgq9iHtQ6eC\n1oqUwmxZRCjBEoOlVAWN1G9ed5r6NBrRFBEmmJT2nKmcJciJO9JBxmTp0r6q3HXp\n5A/jt3ulMojDGnnHU2m3fTFYdXaO6CLSEq0E0ELwe+IFBOoboQ/MOpBGUotw4Alg\n0Fw62K3v7V0k3acNudDukVn65ASfWxR6CHyU34cRE/K/nEe6bKCs3IenS1PX4FVl\nzvhdukuqQuXITieGl+qrz25F2qj+/ZoWkD1Ghw5pO057fEEU1jeUv7zewAWxwcD4\niHrLsIExgF1dtW6PmZqjOCSwuYE=\n-----END CERTIFICATE-----\n";
var realSignGate_CA6 = "-----BEGIN CERTIFICATE-----\nMIIGCzCCBPOgAwIBAgICEDEwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMjAwNjEx\nMDI0MTIzWhcNMzAwNjExMDI0MTIzWjBKMQswCQYDVQQGEwJLUjENMAsGA1UECgwE\nS0lDQTEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRUwEwYDVQQDDAxzaWduR0FURSBD\nQTYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzqGeQzoq+XrtzbLHh\ndeFT1dPJDWSPv7jmyROyI6cUyhk1S4jTzl/cdNguEW/NrlVUM1Wfp09y7F5jKrqn\nY6d2UMemrEt3dPAr7wHv+rJ5lWxxOJDliZEBTTvMPLgt2oBd/K5p/XMn6as5jAZ8\nhgPvGDF1D8+Zx4FWpC5DmkTSNKHOxkJR78yAtpu6m/PNGnhTWp/4Nw9L539AQ20k\nRJ1lGbILQ5LQ1NThLa9RFDu6LeeZ1YxidAzZyQjHAa7aUh2FrEeGln9WXr2ByJu2\ndG57m3bKKkpu20dOqw4VcWxuH8rlIXSUoMM207EFGdReIMdjh9eQN4Jo9lv+4R5Q\nSTqHAgMBAAGjggLfMIIC2zCBjgYDVR0jBIGGMIGDgBTI0I7HSa4fIEKyS38TyXdY\nDKHNwaFopGYwZDELMAkGA1UEBhMCS1IxDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsM\nJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRyYWwxFjAUBgNVBAMM\nDUtJU0EgUm9vdENBIDSCAQEwHQYDVR0OBBYEFEElAdvtDsgzK4nvSmrcEAXSyaJv\nMA4GA1UdDwEB/wQEAwIBBjCCATEGA1UdIAEB/wSCASUwggEhMIIBHQYEVR0gADCC\nARMwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9yLmtyL3JjYS9jcHMu\naHRtbDCB3gYIKwYBBQUHAgIwgdEegc7HdAAgx3jJncEcspQAIKz1x3jHeMmdwRzH\nhbLIsuQAKABUAGgAaQBzACAAYwBlAHIAdABpAGYAaQBjAGEAdABlACAAaQBzACAA\nYQBjAGMAcgBlAGQAaQB0AGUAZAAgAHUAbgBkAGUAcgAgAEUAbABlAGMAdAByAG8A\nbgBpAGMAIABTAGkAZwBuAGEAdAB1AHIAZQAgAEEAYwB0ACAAbwBmACAAdABoAGUA\nIABSAGUAcAB1AGIAbABpAGMAIABvAGYAIABLAG8AcgBlAGEAKTAuBgNVHREEJzAl\noCMGCSqDGoyaRAoBAaAWMBQMEu2VnOq1reygleuztOyduOymnTASBgNVHRMBAf8E\nCDAGAQH/AgEAMA8GA1UdJAEB/wQFMAOAAQAwgY4GA1UdHwSBhjCBgzCBgKB+oHyG\nemxkYXA6Ly9sZGFwLnNpZ25nYXRlLmNvbTozODkvQ049S0lTQS1Sb290Q0EtNCxP\nVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50cmFsLE89S0lTQSxD\nPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IBAQDD\nWdLsHlcg5lT0E/3NCCzWZujfszm3L0Q5gPOzPbinK8/2S7bielgFuSVhJEf2aV02\nhHVedIcFxsX6ny+QDzdtsljZ63JoxP8u+KHs/5Hsv4k7XqZjkKqR643v7L8V/7fb\nf4c+7ZIm9wJFt79GyhODVToF4Hijc4bj35AlDhlkqz31nAOjLkFRxHXawtBQdO4/\nBbsyIiwbB9d6LfOfErf2yPC/+cFGtlAZk0mzjM2Lsq4dxHQe7DYGXvSBcbAQnjp9\n6vpbERjTyME5k8AqbloLbOh7/8YCvuD9tlx22YW9e5746BE91c6sZbs4kjPWWHW/\nbPDojcbXj+AlvB0l0T4A\n-----END CERTIFICATE-----\n";
var realSignKorea_CA4 = "-----BEGIN CERTIFICATE-----\nMIIGDTCCBPWgAwIBAgICECswDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMjAwNjAy\nMDYxOTMwWhcNMzAwNjAyMDYxOTMwWjBQMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nU2lnbktvcmVhMRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFjAUBgNVBAMMDVNpZ25L\nb3JlYSBDQTQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDARNdlcghT\nWjhctA7zqjW09m+mFAPNl+3efYCkbsvlWJj9DmAGwv6Hsz+1bb+QnZdUZki0Tx19\nZSi1Ev71s2NJVkRRwx27qp3Me03ZGfO0jeDEbPjy8KrJZL2O1mhEAgyCIjFaDJWx\nBOL2agLTX/lJd0+aLT2m3GlSegaqSiw7NZVHPmJul7QQDlOGv1BRnT6XDlMNMsNd\nNr450VhXfj/xMT5lcM/jomJ7e4l6x9OJVQHfmd44EVs5MPR0WYlJT+Sk6NQzKFIp\nqauyF9w8N5StbEeVCkhS8BphBvD/alKobAnYqYvylLvzPl1/DVuQQM6dA+srbqRx\nfFu5gREiiiEZAgMBAAGjggLbMIIC1zCBjgYDVR0jBIGGMIGDgBTI0I7HSa4fIEKy\nS38TyXdYDKHNwaFopGYwZDELMAkGA1UEBhMCS1IxDTALBgNVBAoMBEtJU0ExLjAs\nBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRyYWwxFjAU\nBgNVBAMMDUtJU0EgUm9vdENBIDSCAQEwHQYDVR0OBBYEFDgeYY9sVT3n8YZk/ilJ\nSpmh4/EhMA4GA1UdDwEB/wQEAwIBBjCCATEGA1UdIAEB/wSCASUwggEhMIIBHQYE\nVR0gADCCARMwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9yLmtyL3Jj\nYS9jcHMuaHRtbDCB3gYIKwYBBQUHAgIwgdEegc7HdAAgx3jJncEcspQAIKz1x3jH\neMmdwRzHhbLIsuQAKABUAGgAaQBzACAAYwBlAHIAdABpAGYAaQBjAGEAdABlACAA\naQBzACAAYQBjAGMAcgBlAGQAaQB0AGUAZAAgAHUAbgBkAGUAcgAgAEUAbABlAGMA\ndAByAG8AbgBpAGMAIABTAGkAZwBuAGEAdAB1AHIAZQAgAEEAYwB0ACAAbwBmACAA\ndABoAGUAIABSAGUAcAB1AGIAbABpAGMAIABvAGYAIABLAG8AcgBlAGEAKTAqBgNV\nHREEIzAhoB8GCSqDGoyaRAoBAaASMBAMDijso7wp7L2U7Iqk7L2kMBIGA1UdEwEB\n/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjgYDVR0fBIGGMIGDMIGAoH6g\nfIZ6bGRhcDovL2Rpci5zaWdua29yZWEuY29tOjM4OS9DTj1LSVNBLVJvb3RDQS00\nLE9VPUtvcmVhLUNlcnRpZmljYXRpb24tQXV0aG9yaXR5LUNlbnRyYWwsTz1LSVNB\nLEM9S1I/YXV0aG9yaXR5UmV2b2NhdGlvbkxpc3QwDQYJKoZIhvcNAQELBQADggEB\nAH3+suM/nwukdYug4OilFAvXaCQ85sByMMj9S9vgWydmu7TRKxWHg/8O6QNhgxWc\n2Vf2Lmp55d0G/GyNNjgcurPaflk+WgVZmDNtfK5Nm8s8YwVDeUYPi4zMgR72tlXS\nCAqx2+Jvia5BTqvPsEEMnlgWnGtDdNHadp4JiGoDlAZUuUPUy2mPBmAQRu9ggAk5\nXbOXniBMdjv2ZWaEAOD0KdtZ/Cd3BymnekyQkN7P9++ef5rE+sG/QKmWn+j8MDMZ\nQ5+QUE4VIeYPzrxfkcGH2uD07uAI6+88i935JXEvJRW1UZYUUjNmH2CPXBGdPRIM\nxJMv80AqOMW8qToIApMH8Kw=\n-----END CERTIFICATE-----\n";
var realTradeSignCA4 = "-----BEGIN CERTIFICATE-----\nMIIGFzCCBP+gAwIBAgICEDUwDQYJKoZIhvcNAQELBQAwZDELMAkGA1UEBhMCS1Ix\nDTALBgNVBAoMBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5IENlbnRyYWwxFjAUBgNVBAMMDUtJU0EgUm9vdENBIDQwHhcNMjAwNjEx\nMDMxNDA0WhcNMzAwNjExMDMxNDA0WjBPMQswCQYDVQQGEwJLUjESMBAGA1UECgwJ\nVHJhZGVTaWduMRUwEwYDVQQLDAxBY2NyZWRpdGVkQ0ExFTATBgNVBAMMDFRyYWRl\nU2lnbkNBNDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPdpkvG22aU\nCN6GPdIbbqtRPtdilU2varcEKRfU6edi4p4618WS4slzLu/2w4s6ofcNwLC4w1Lz\nFoHEeMUqNOtFYZ+0RzwSMc/MUkftxS7Rvy4CoCJKLV3XqGfFyNp4ziUuECBaqHva\nuNQKg/Yt++gB5nDb9jD4LDXwsVR6E6+6vd2Fv3KYx210GwUbQKCNpLHJHoYiCMwG\nIa24jKFVL3tEK0RzG77fN8CWVWRT1K/hKpwOndAhNO1y5AQPGD9HxYciwMOLSVVJ\nqqgZ+nNpyj9AZT3ESKgsnLXPn/iKIlHoYpW3dP43cUgb3x8JAEy6x/QROAS6IAAK\n3WBiu7tfc/kCAwEAAaOCAuYwggLiMIGOBgNVHSMEgYYwgYOAFMjQjsdJrh8gQrJL\nfxPJd1gMoc3BoWikZjBkMQswCQYDVQQGEwJLUjENMAsGA1UECgwES0lTQTEuMCwG\nA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgQ2VudHJhbDEWMBQG\nA1UEAwwNS0lTQSBSb290Q0EgNIIBATAdBgNVHQ4EFgQUobHHY+Gp9NKZS0H0UkRn\n0rFwdjQwDgYDVR0PAQH/BAQDAgEGMIIBMQYDVR0gAQH/BIIBJTCCASEwggEdBgRV\nHSAAMIIBEzAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNh\nL2Nwcy5odG1sMIHeBggrBgEFBQcCAjCB0R6Bzsd0ACDHeMmdwRyylAAgrPXHeMd4\nyZ3BHMeFssiy5AAoAFQAaABpAHMAIABjAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABp\nAHMAIABhAGMAYwByAGUAZABpAHQAZQBkACAAdQBuAGQAZQByACAARQBsAGUAYwB0\nAHIAbwBuAGkAYwAgAFMAaQBnAG4AYQB0AHUAcgBlACAAQQBjAHQAIABvAGYAIAB0\nAGgAZQAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAEsAbwByAGUAYQApMDQGA1Ud\nEQQtMCugKQYJKoMajJpECgEBoBwwGgwY7ZWc6rWt66y07Jet7KCV67O07Ya17Iug\nMBIGA1UdEwEB/wQIMAYBAf8CAQAwDwYDVR0kAQH/BAUwA4ABADCBjwYDVR0fBIGH\nMIGEMIGBoH+gfYZ7bGRhcDovL2xkYXAudHJhZGVzaWduLm5ldDozODkvQ049S0lT\nQS1Sb290Q0EtNCxPVT1Lb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50\ncmFsLE89S0lTQSxDPUtSP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3\nDQEBCwUAA4IBAQBdylJKMNYVmMXcoxiGGPfmeV2UDZGwBtftdSO4a494PBsLVYBY\nCo0i1p9C18BTnh4uxfl3Hz13Fq3n1V1BWzK9oviCpmgBHQkQGHy57FeHNz54Ax7M\n0m8dWc//Iijcuf6ZSA5wL+vSCYqoE4cncWUNQk/PfCzT5S0j3Vuh64UPG7aJblSx\nwtb+80XG+CcdEsnvYWfMbTH1CWs2LUP+ptgHhzPR59iSN52DIv0tpzjHAG8Hk+Ln\n+7jz/xGfFIFh7PDY/ltD8zfQ36EbPhy17dVKEU1MRKtYNcB0kZqDBIUnw7yLYNiq\n03MkeZbAmaevFSAl6LA4c1mVHDouVROjCR7F\n-----END CERTIFICATE-----\n";

// Test-CA 인증서 (2048)
var testCrossCertCA4 = "-----BEGIN CERTIFICATE-----\nMIIFdzCCBF+gAwIBAgIBAjANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA2MB4XDTE1\nMDQxNzA2MjkxMloXDTI1MDQxNzA2MjkxMlowUzELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCUNyb3NzQ2VydDEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRkwFwYDVQQDDBBD\ncm9zc0NlcnRUZXN0Q0E0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nnpJMFkQZMbOfCnOOoZiGXwgCeXSnIpIilxjO2Pof43mQQbRXm7aJHMaIy9PackoJ\nC8XewKYmI972sdxw9XEhyNWc56FolTzNxlUhBXt519MPrQFxEqd99+vB5FhCHr0X\nlDzXZ6wlXPF4RfEdazKalVzhTNSB+UkQoXs0OIqYsjoTNhk7ZeND/3b5RFjl2Ueh\nLXhD+6ctfCam8CZrsoLjZ9W5V55GwtzC22Gu8SMRQs2N3vD4UJHyUQXMN/MMyHCQ\nFIqmNeuUUj6ME0JE+yNa8GQd/EZTQZlEa0JmB0MSWsDWcLY2cTSbpzMLqFnfEjo/\nCti1BkZYu6pfvCOSu4E66wIDAQABo4ICPjCCAjowgZMGA1UdIwSBizCBiIAUnAYk\nQIuJw3tP3B93sHc6e+oacqihbaRrMGkxCzAJBgNVBAYTAktSMQ0wCwYDVQQKDARL\nSVNBMS4wLAYDVQQLDCVLb3JlYSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBDZW50\ncmFsMRswGQYDVQQDDBJLaXNhIFRlc3QgUm9vdENBIDaCAQEwHQYDVR0OBBYEFKkd\nKPKr/3iAss+M2FC+rM8gbij8MA4GA1UdDwEB/wQEAwIBBjB8BgNVHSABAf8EcjBw\nMG4GBFUdIAAwZjAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3Iv\ncmNhL2Nwcy5odG1sMDIGCCsGAQUFBwICMCYeJMd0ACDHeMmdwRyylAAgwtzV2Map\nACDHeMmdwRzHhbLIsuQALjAzBgNVHREELDAqoCgGCSqDGoyaRAoBAaAbMBkMF+2V\nnOq1reyghOyekOyduOymnSjso7wpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDwYDVR0k\nAQH/BAUwA4ABADCBmgYDVR0fBIGSMIGPMIGMoIGJoIGGhoGDbGRhcDovL3Rlc3Rk\naXIuY3Jvc3NjZXJ0LmNvbTozODkvQ049S2lzYS1UZXN0LVJvb3RDQS02LE9VPUtv\ncmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRyYWwsTz1LSVNBLEM9S1I/\nYXV0aG9yaXR5UmV2b2NhdGlvbkxpc3QwDQYJKoZIhvcNAQELBQADggEBAE0R+rtm\nqu1VdNavw7AtVYifbmF19DhIeD2bVfPfNpk9u0K5WvInSKK3w3K1LnDVFXYbiljA\npk7h5YDqjqCIFnJzjpghAEEtd0OszTrU12NjbguQc/5aWHDtdWHN/QvsB5P4obi4\nFiZxMlkPhx4v6I72pQ7RNMTZYJ/HR0rKzcMKbhpBQO7Qp4SqRxBwBhZ2eRZdw9+E\nZpg2fdg0JzE3fNKbdBdRdMVKMP/lJkVY8yOlPB6rIX/Hgv9baiw6kYrnBaBA4SSo\nr+4BPRM50+QKoVm2A8mMkET/F+RgeTbSalmCZOjGPHovMSN/YwLWm1Xkm7LIty6f\n6B/6UDaN9qccmMA=\n-----END CERTIFICATE-----\n";
var testSignGateFTCA4 = "-----BEGIN CERTIFICATE-----\nMIIFaTCCBFGgAwIBAgIBMDANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA1MB4XDTEz\nMTIwNjA3MTYxOVoXDTE4MTIwNjA3MTYxOVowTTELMAkGA1UEBhMCS1IxDTALBgNV\nBAoMBEtJQ0ExFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEYMBYGA1UEAwwPc2lnbkdB\nVEUgRlRDQTA0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmPETn5J8\nNql8/LtsvbEfF0VZyRSrhFLxXMzqvkU/nkitekOu9GHsGJ6NQqywoct6dXIztUjX\nw56sZs2jtKgfohI5Z67NK+i4/ZdZnlDTzmwI2HZnc8rP6KT6qSlvk9QwT5PyhW63\nmYGGczc5q7SL91EdAIwwvyFpvyoGga455VFBLWp/5JFA6MwhbhxK5xqKBLQYyMFz\n1dJ+tfmkRMgCE4ferdkZ9yLnRFccCnRvNQ8GRspeHRqIRH+x00daW/2nWezNtMKW\nIKQKoNS6JS9NRHdP5HwxQ/duHPMMYn4gZ26axxN4fLN0qfjN1/HRGe2rnt4P6KFs\nN/7k3rt1KNkZrwIDAQABo4ICNjCCAjIwgZMGA1UdIwSBizCBiIAUNHiHacP1mzON\naqqqLo4PlL5XkQ6hbaRrMGkxCzAJBgNVBAYTAktSMQ0wCwYDVQQKDARLSVNBMS4w\nLAYDVQQLDCVLb3JlYSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBDZW50cmFsMRsw\nGQYDVQQDDBJLaXNhIFRlc3QgUm9vdENBIDWCAQEwHQYDVR0OBBYEFFhGOKvE6iVQ\n0hj6LtrcnPb1ouvVMA4GA1UdDwEB/wQEAwIBBjB8BgNVHSABAf8EcjBwMG4GBFUd\nIAAwZjAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNhL2Nw\ncy5odG1sMDIGCCsGAQUFBwICMCYeJMd0ACDHeMmdwRyylAAgwtzV2MapACDHeMmd\nwRzHhbLIsuQALjAuBgNVHREEJzAloCMGCSqDGoyaRAoBAaAWMBQMEu2VnOq1reyg\nleuztOyduOymnTASBgNVHRMBAf8ECDAGAQH/AgEAMA8GA1UdJAEB/wQFMAOAAQAw\ngZcGA1UdHwSBjzCBjDCBiaCBhqCBg4aBgGxkYXA6Ly9jYXRlc3Quc2lnbmdhdGUu\nY29tOjM4OS9jbj1LSVNBIFRlc3RSb290Q0EgNSxvdT1Lb3JlYSBDZXJ0aWZpY2F0\naW9uIEF1dGhvcml0eSBDZW50cmFsLG89S0lTQSxjPUtSP2F1dGhvcml0eVJldm9j\nYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IBAQCTPuO2qn6XC7buFSvpsUHFPpEV\npUHO7ywXDduqEN1QjUOtUoCwHJwdS96PIVSnhxww9R+jYzgabh3xtFESPD4WTcPx\nFVia+9FU6EPOIGMfKR1OGhkWsho25OTTPfuAwQvFP+7RhL/hNUQMhvZqDOA7V0SA\nd665sA/aQpAl9aOr9xgmHk80O8ea8KVyyZn0vaW27Y+mETouqryjy5+OBakfvxYF\nNQebsh/yDlm96hKokbJFeNrAzPcEZuqbC3TKtnFzQ9Uw/mEJLHgUISil+m+EuW4G\nHgyPhRhPOseJ30EZ48LMo2EhanZubQ0doD1TJi2OxO3QDAn3/lFaPnGJkM9r\n-----END CERTIFICATE-----\n";
var testSignGateFTCA6 = "-----BEGIN CERTIFICATE-----\nMIIFaTCCBFGgAwIBAgIBCzANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTE4\nMDExNzAwMzg0M1oXDTI4MDExNzAwMzg0M1owTTELMAkGA1UEBhMCS1IxDTALBgNV\nBAoMBEtJQ0ExFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEYMBYGA1UEAwwPc2lnbkdB\nVEUgRlRDQTA2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlgnaBDKq\nybVMXfefY1fpHHy33OkdjmN/1m+N/pioWD0Fl6zKCNafda02m9S9JMLiDkaHo7Y1\nbarR98XitI9bmvhCsEduidbwFusvXnJQH2Bo12ZN4MBv7rSFYJa5JX1Vpr7i7Zgy\nVLtxm3cXZrIARVqteu24vMXNC/ntCV+4K+qlof3FAGuGn5ixTkYpF4SSrRZKwgg6\nINR8NO5wvyW1lPE/tUvCQRU+IVpqo9xaQbq47OrzWC7fDf+1F7jr2gz54Nx25TVN\nuaqplRfVpqaqta83vf+UnPZbVHA392B/VsNWOW9CEtUOsik+32wD+Ls4qye+IW7L\nTtS7UUGfW+JQWwIDAQABo4ICNjCCAjIwgZMGA1UdIwSBizCBiIAUWMoXibCF+Hjc\n03q/AfKgQDz1wdihbaRrMGkxCzAJBgNVBAYTAktSMQ0wCwYDVQQKDARLSVNBMS4w\nLAYDVQQLDCVLb3JlYSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBDZW50cmFsMRsw\nGQYDVQQDDBJLaXNhIFRlc3QgUm9vdENBIDeCAQEwHQYDVR0OBBYEFI9v9uiJcWoC\nA9t6Ko5VqFPn0MwzMA4GA1UdDwEB/wQEAwIBBjB8BgNVHSABAf8EcjBwMG4GBFUd\nIAAwZjAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iua3IvcmNhL2Nw\ncy5odG1sMDIGCCsGAQUFBwICMCYeJMd0ACDHeMmdwRyylAAgwtzV2MapACDHeMmd\nwRzHhbLIsuQALjAuBgNVHREEJzAloCMGCSqDGoyaRAoBAaAWMBQMEu2VnOq1reyg\nleuztOyduOymnTASBgNVHRMBAf8ECDAGAQH/AgEAMA8GA1UdJAEB/wQFMAOAAQAw\ngZcGA1UdHwSBjzCBjDCBiaCBhqCBg4aBgGxkYXA6Ly9jYXRlc3Quc2lnbmdhdGUu\nY29tOjM4OS9jbj1LaXNhIFRlc3RSb290Q0EgNyxvdT1Lb3JlYSBDZXJ0aWZpY2F0\naW9uIEF1dGhvcml0eSBDZW50cmFsLG89S0lTQSxjPUtSP2F1dGhvcml0eVJldm9j\nYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IBAQBHmQLyeJSmzIDFRFP6FRfU5pCi\nVJgpv8jU+kW7j07OtFP12zSjO2zGJUg5OgvyA0em83G07z3ncREGPcwvO9BT5J5H\n3wujOHDmnyC/yL1G9wwPmh5TicMHL56T7nlKLZm4szM+/qj9j7/j2yoZ5Qo4igaV\nH+MdPkeVjtEyNwaMORAYQeoqRtZIfG/FVpEfkfSjX+GXir4f3vdqoUH/DdHDzLVV\n9ykhePLyahiCcuKFUQHgtNu/M2paQGSLI2O6PzPrTmShGdJkaOJQy2smbQXjnWGU\nARvQMue93TnLHPzrOzDNRL55bJerO7pSvehBToYut5rPd7S1bzYsSVaaiQ8d\n-----END CERTIFICATE-----\n"
var testSignKoreaCA3 = "-----BEGIN CERTIFICATE-----\nMIIFQzCCBCugAwIBAgIBNTANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA1MB4XDTE0\nMTIxOTA2MzczM1oXDTE5MTIxOTA2MzczM1owVTELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCVNpZ25Lb3JlYTEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRswGQYDVQQDDBJT\naWduS29yZWEgVGVzdCBDQTMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQCUq8MzX2vI86FOek0tfM+SnAMIOgluDRliPWtY2AkLy7gUDyIDq2slIEgByhkH\nzTyzKGyhRw6iXSYuw/TaAiWT1WKs69a8QL+UYXPF0ZoEc5mKhIC5/Cq/LjalCJ34\nGZ2cQRJVsNvhZyirJdwV2FBn/EvaLs9L/6gQdEmj87ynTVPuG4FR3ffWqPQ8OBk8\nJLsYaiWYwLpIz9xewDkssQToNmk47exQD/Uv3/9ceJc0ZE9Jp3ruQREM3bz/RQR8\nBmqd6jZ/7vEiZ255KtGbuRFPI0NvkqABBxYBck3zxuw5HBVJmgUo0Vae9DiWC0L5\nmNxBe2PrKPfxRkrEKWydSG2xAgMBAAGjggIIMIICBDCBkwYDVR0jBIGLMIGIgBQ0\neIdpw/WbM41qqqoujg+UvleRDqFtpGswaTELMAkGA1UEBhMCS1IxDTALBgNVBAoM\nBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENl\nbnRyYWwxGzAZBgNVBAMMEktpc2EgVGVzdCBSb290Q0EgNYIBATAdBgNVHQ4EFgQU\nDwQzIZ4ZO9CskEcekRndC+UMZ+UwDgYDVR0PAQH/BAQDAgEGMHwGA1UdIAEB/wRy\nMHAwbgYEVR0gADBmMDAGCCsGAQUFBwIBFiRodHRwOi8vd3d3LnJvb3RjYS5vci5r\nci9yY2EvY3BzLmh0bWwwMgYIKwYBBQUHAgIwJh4kx3QAIMd4yZ3BHLKUACDC3NXY\nxqkAIMd4yZ3BHMeFssiy5AAuMCoGA1UdEQQjMCGgHwYJKoMajJpECgEBoBIwEAwO\nKOyjvCnsvZTsiqTsvaQwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8EBTAD\ngAEAMG4GA1UdHwRnMGUwY6BhoF+GXWxkYXA6Ly8yMTEuMTc1LjgxLjEwMjo2ODkv\nQ049VEVTVC1ST09ULVJTQS1DUkwyLE9VPVJPT1RDQSxPPUtJU0EsQz1LUj9hdXRo\nb3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAD65s+J6F/eSE\nSCeBip7Mh9bwnOHNX1c8dIghyc9ncWWOEo4B8TEVUA9fuCZGUiezLNLU55QpaRp0\n6aTMsHMdCkz++8av/SjNDJ6FcbIb3yJLH/bOs5XFrlxZsfkD5q/ugr4Wz13vhyfc\nsLjz5vhdRqGigMrpBRRDHGmBEjXmfHCEvAmuwMQes3CZhHBj2P1VpeJ7J6Ccucs7\naZGMSvRNkWES7TDe/c0hgrRFoU1r1qEpnAz9PgyXR9RNsHn/2xO6XlX1RdmgImlqDxpR0utuAaHt77s98tE6i5DwYCqp35aHtKgehPdIi5V7fj2IKdErhvxf7Paok0AzA/MC3bCdcQ==\n-----END CERTIFICATE-----\n";
var testTradeSign_2048 = "-----BEGIN CERTIFICATE-----\nMIIFeDCCBGCgAwIBAgIBGTANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA1MB4XDTEx\nMDQwODAxMjMwN1oXDTE2MDQwODAxMjMwN1owVzELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCVRyYWRlU2lnbjEVMBMGA1UECwwMQWNjcmVkaXRlZENBMR0wGwYDVQQDDBRU\ncmFkZVNpZ25DQTIwMTFUZXN0MjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAOiizuoxk8dTTGbDd0CYf2Aq1YJmbB5Wg/LEhSBVHHOcB9IMuqCoIKzg+4BP\nQj0W9zEBud4cdvXPdoof3BSqzdSKHkj49H7cWT4SlHM36LdggB9xlwVodDmHrgiL\n9PPGioUjCSSz/Wa7gumYW9NR2CYlnaTjF+d30jESWWII5SB2TIu+rqHy577j9kcv\nFSZ7cNkRSXnotGfuvmKRyZUG7syK1I8zXumgmTHq2wrTKDuxpzTdMpWJdj/g/Wg4\ncqQeGx9rRkOJmEknQl7JTuOgvc3nrErWZEmp122Qrz+HWJq9qO0k3mJ1NpCc/Cxw\noL6Pm2EZKaASgbP2xTfjq//LbdkCAwEAAaOCAjswggI3MIGTBgNVHSMEgYswgYiA\nFDR4h2nD9ZszjWqqqi6OD5S+V5EOoW2kazBpMQswCQYDVQQGEwJLUjENMAsGA1UE\nCgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA1ggEBMB0GA1UdDgQW\nBBQHhJ7STY17e1qOdogFQUMa1wgnTjAOBgNVHQ8BAf8EBAMCAQYwfAYDVR0gAQH/\nBHIwcDBuBgRVHSAAMGYwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9y\nLmtyL3JjYS9jcHMuaHRtbDAyBggrBgEFBQcCAjAmHiTHdAAgx3jJncEcspQAIMLc\n1djGqQAgx3jJncEcx4WyyLLkAC4wOQYDVR0RBDIwMKAuBgkqgxqMmkQKAQGgITAf\nDB0o7KO8Ke2VnOq1reustOyXreygleuztO2GteyLoDASBgNVHRMBAf8ECDAGAQH/\nAgEAMA8GA1UdJAEB/wQFMAOAAQAwgZEGA1UdHwSBiTCBhjCBg6CBgKB+hnxsZGFw\nOi8vZGV2Y2EudHJhZGVzaWduLm5ldDozODkvQ049S0lTQS1Sb290Q0EtNSxPVT1L\nb3JlYS1DZXJ0aWZpY2F0aW9uLUF1dGhvcml0eS1DZW50cmFsLE89S0lTQSxDPUtS\nP2F1dGhvcml0eVJldm9jYXRpb25MaXN0MA0GCSqGSIb3DQEBCwUAA4IBAQAOx4Ct\nUiwFmZGKpnBrWGIHoDz+TrtiVZ5JZ/5MKh8ElEiQT8huKbyFmztuo4YlBg5QP4j8\nOQkicL0nNVGj7iI88UZR/ek3d9xph+2uyklnemJMxEyPTfvIPnjvrD/ij337f7xc\npAsGEHncdmVW1TkiU0zw9npA090y4JzAixI1U4Mmy8kt/pEercwzYOFYjExXZe4V\nTZfrvBOU5qyEsQcCP4xgyI6YSG5bzflGeUmEza84FcMJCSE4eQqON/bBv9JHFZSP\nhiM5CF6KusrrpEQ6hfrIH7U0EEoL74DyJqveJz3Q+T94nnJm3Z3lrkBaUoa01wXF\nhQ+Az+3nFahWtwFc\n-----END CERTIFICATE-----\n";
var testTradeSign_08 = "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgIBCDANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTE4\nMDExNjAxNTU0MFoXDTI4MDExNjAxNTU0MFowVjELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCVRyYWRlU2lnbjEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRwwGgYDVQQDDBNU\ncmFkZVNpZ25DQTIwMThUZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAoXO3YcgktesGEIIBVTpy+uM5g0hEOXAdjwb19d8jmn4O8ZzTStl6zURROT5G\npGLLhLxj3hSfzcvxr+0TRVyPij/ocgXziMYIiMUXSVMndN5je6A3QqDCEwa0+gLU\nXbDGcKVmWjHD+8rJtsXj8cBRQNGWul+ZaCChoIOtVWwvpSbevr94+t7ChG/EEaD1\n57kQPqS528DKNlyKl9V+vW4LoKosnKHeWB/1POHb7LrD5tyi2N9QZY5p8OZaicz0\nSouwEtjBI8GRkKHzLFys5pTZTTCWjhMoCBjrYO92GVgWbiEEdH49u2HYJP94+SHV\nXa+t52cQ/HVrJLsxwyYhH97x8wIDAQABo4ICQzCCAj8wgZMGA1UdIwSBizCBiIAU\nWMoXibCF+Hjc03q/AfKgQDz1wdihbaRrMGkxCzAJBgNVBAYTAktSMQ0wCwYDVQQK\nDARLSVNBMS4wLAYDVQQLDCVLb3JlYSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBD\nZW50cmFsMRswGQYDVQQDDBJLaXNhIFRlc3QgUm9vdENBIDeCAQEwHQYDVR0OBBYE\nFLpQF1kCoj5O4f7c810rzp6KhI0MMA4GA1UdDwEB/wQEAwIBBjB8BgNVHSABAf8E\ncjBwMG4GBFUdIAAwZjAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5yb290Y2Eub3Iu\na3IvcmNhL2Nwcy5odG1sMDIGCCsGAQUFBwICMCYeJMd0ACDHeMmdwRyylAAgwtzV\n2MapACDHeMmdwRzHhbLIsuQALjA5BgNVHREEMjAwoC4GCSqDGoyaRAoBAaAhMB8M\nHSjso7wp7ZWc6rWt66y07Jet7KCV67O07Ya17IugMBIGA1UdEwEB/wQIMAYBAf8C\nAQAwDwYDVR0kAQH/BAUwA4ABADCBmQYDVR0fBIGRMIGOMIGLoIGIoIGFhoGCbGRh\ncDovL3Rlc3RjYS50cmFkZXNpZ24ubmV0OjM4OS9DTj1LaXNhLVRlc3QtUm9vdENB\nLTcsT1U9S29yZWEtQ2VydGlmaWNhdGlvbi1BdXRob3JpdHktQ2VudHJhbCxPPUtJ\nU0EsQz1LUj9hdXRob3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOC\nAQEAT+i4wIbIyrOW4r7QVGigmtcZHhxuIBYFU/5083boENoY54MPe2872EH2pLwO\nV7OkjxTTKyd7cbOzqYhGKLbnPfI8yqyCwiGj+SOE4qQ2BmA+2cNr3BLmEuokR9tn\ntMQXFyTLwNMWznIJEnKrhQSgNAjDmSz+j3fnx8+A5dbZlCzSwtQR8kVJPd2HJK1U\nNw445S3s92QCYW9WRhx23KV8134VBKI4uwnnUdiZZIYFMh9aWdX/fEdvEqz1mUJp\n6uwxz+IyQK6HK1ZffXeSvA8cuT316v8bDk/+tC6PV1tFS1jNJkWv4IRtSKXzR1T1\n8naThVU9/QKSkuRdSTqMEoNCPQ==\n-----END CERTIFICATE-----\n";
var testYessignClass3_2048 = "------BEGIN CERTIFICATE-----\nMIIFSTCCBDGgAwIBAgIBCDANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA2MB4XDTE1\nMTIyMjA1MTMyNFoXDTI1MTIyMjA1MTMyNFowVzELMAkGA1UEBhMCa3IxEDAOBgNV\nBAoMB3llc3NpZ24xFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEfMB0GA1UEAwwWeWVz\nc2lnbkNBLVRlc3QgQ2xhc3MgMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAMLQGMF8YsirEXeGkoOh+r/90pmYt0oc4gkgK/5vFyW6f9F0W9evJ9yqzUrE\niZ7gBkENKuv/xoOx70AALT9qYXnaWsIDYbrgfEFC5TyexKR3alWyuUQmsm/QDNgj\nNCMZ/3Xj4qc5DkOp86oj71x9g9sBg8tes4sH77Dm3qGNH0T83FnWjcNb+itqpliQ\n4UCRRp5aniAs1vmwhvxDmAobpnT0jgqnk5jvzo7McwF8BLFNTnhZXrejZx1orIRE\naIxHAAvlft5+1dW+66kkhlMNf3Uu1VLRs/o7s0OK+gIP39n7872Dm2bBm697l3tO\n+mGyMN8ari0aYMGTkfLuIzF/wwECAwEAAaOCAgwwggIIMIGTBgNVHSMEgYswgYiA\nFJwGJECLicN7T9wfd7B3OnvqGnKooW2kazBpMQswCQYDVQQGEwJLUjENMAsGA1UE\nCgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA2ggEBMB0GA1UdDgQW\nBBRw+n2Dw0UfFJrv8Cg+E4xduwULlDAOBgNVHQ8BAf8EBAMCAQYwfAYDVR0gAQH/\nBHIwcDBuBgRVHSAAMGYwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9y\nLmtyL3JjYS9jcHMuaHRtbDAyBggrBgEFBQcCAjAmHiTHdAAgx3jJncEcspQAIMLc\n1djGqQAgx3jJncEcx4WyyLLkAC4wKwYDVR0RBCQwIqAgBgkqgxqMmkQKAQGgEzAR\nDA/quIjsnLXqsrDsoJzsm5AwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8E\nBTADgAEAMHEGA1UdHwRqMGgwZqBkoGKGYGxkYXA6Ly9zbm9vcHkueWVzc2lnbi5v\nci5rcjo2MDIwL2NuPUtJU0EtVEVTVC1BUkw1LG91PVJPT1RDQSxvPUtJU0EsYz1L\nUj9hdXRob3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEABFwX\nbGsEtqvSIKk+pJEAlW3YhwGdkucnzbTRH/Q4GH/cb8NXYSGN4UuS0aMaYBuxwaTt\n3SOsFmvf3dMO97v61SEUYqayvab8FvKoLrm34LdIjYgqeDxikJD7TzblVnDvlT4P\nVxxUPdoh0zN7YLbgn63m2op5QjM0es9grlF2wP8efAnQuql1sS5sBB+hEwmDhNvl\nfhFFU+9k87yezoomxwjp/4FnpIaoxeOLto3/O2g2uvlrOzr+d7TEv2qbCINNjE35\nwZg+6o2jU+mb+SKFGbIlpvde6bYqkqSm4UiH1oJG3vpiuKMYi3k6LFX9/URfd+k0\nw44fgzf04brWwP49XA==\n-----END CERTIFICATE-----\n";
var testYessignClass4_2048 = "-----BEGIN CERTIFICATE-----\nMIIFSTCCBDGgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTE4\nMDExNTAxNDkxN1oXDTI4MDExNTAxNDkxN1owVzELMAkGA1UEBhMCa3IxEDAOBgNV\nBAoMB3llc3NpZ24xFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEfMB0GA1UEAwwWeWVz\nc2lnbkNBLVRlc3QgQ2xhc3MgNDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAL3S3x1+2i9TUnx0Lo3mchSsCaRXFCma5KxlfxN4mSzCpJEA40x0wUJvg8KP\nqSfjC2JAR/Ikvd3LsNDLrVM9dX2BrqBrMNXqc7XtQlxCGFJ2qgTxOV6iPBwG5YPd\nigQAA/Z/7Eem77tMIShyLAZTIiQDkjICh7P2HffEkjXEE1dbmSFlPQvN8bO3n4OJ\njuj5snlhZo4ByG/D7nYgLMXTKM96BLMBsMJo1acqEbh8QtWcVckT2mcsNvpXeG2s\n5YPRrH1/XJdxiJU1fyd8Lo8ZhNgISpOSxr5I4vAutHYSjF7A+lx2FWE0LVmnrmGJ\n8uapEKR+CjFBQ8Ps5fmfIKlsElUCAwEAAaOCAgwwggIIMIGTBgNVHSMEgYswgYiA\nFFjKF4mwhfh43NN6vwHyoEA89cHYoW2kazBpMQswCQYDVQQGEwJLUjENMAsGA1UE\nCgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3ggEBMB0GA1UdDgQW\nBBRmNezo/f7buCpiqQKx5tyHXNz5wzAOBgNVHQ8BAf8EBAMCAQYwfAYDVR0gAQH/\nBHIwcDBuBgRVHSAAMGYwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9y\nLmtyL3JjYS9jcHMuaHRtbDAyBggrBgEFBQcCAjAmHiTHdAAgx3jJncEcspQAIMLc\n1djGqQAgx3jJncEcx4WyyLLkAC4wKwYDVR0RBCQwIqAgBgkqgxqMmkQKAQGgEzAR\nDA/quIjsnLXqsrDsoJzsm5AwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8E\nBTADgAEAMHEGA1UdHwRqMGgwZqBkoGKGYGxkYXA6Ly9zbm9vcHkueWVzc2lnbi5v\nci5rcjo2MDIwL2NuPUtJU0EtVEVTVC1BUkw3LG91PVJPT1RDQSxvPUtJU0EsYz1L\nUj9hdXRob3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAcMoS\n4jGVD1UOXKd+Oqd0Tt8jRi7uuISeEJRkb0tXHEi+hBCpHG1z/t6EdLD2tMAP+X86\nTqrYdXBwlnPddE+r5y9pci1EOHNiraMjQV1rZ5/t3YEGnwOYUN3AeW3ZYJG6q3ou\ngWKrBl3aqskilavqUewg6W/OU6rcVzmAvoYqGKMfwwkHu9RYUVd/tKaHtXrXAi51\n4bcgNZxN1tUpMcQ5d9WbOC4DbhGBqkSfGzGGO8Jhc3CdhQ7Pbo5+rwHuzkvhbrL0\nZgJJ7FPZSNmn0Z1L7uqRzvMYdsXMa64bNjp0GBaJTDFSp8dUHO3gl7liHSQoYaC1\nulvj/tsE8NFHqcOa3Q==\n-----END CERTIFICATE-----\n";
var testSignKorea_CA4 = "-----BEGIN CERTIFICATE-----\nMIIFQzCCBCugAwIBAgIBBTANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA2MB4XDTE1\nMDUwODA1MzY1NloXDTI1MDUwODA1MzY1NlowVTELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCVNpZ25Lb3JlYTEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRswGQYDVQQDDBJT\naWduS29yZWEgVGVzdCBDQTQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQC/trGhKo8JR47kovuxQlvjCjHnEGbcObfDxIdvloMKGiKJ6dqve7jH6UJSByo1\nc8xT+pawupVDCkfHwEPHgea9DHxKq9q54g+OnWNt83g+PShKee0JF4sPIAVC7kUB\nRz0b5nx2lhS7l19gIiEsWd2W2vC7ujfyP6sNoRNaJh0XkqImTw2P1UO2MHsNMJhu\nL7Vjrxw6oORbpSXLW938BwhCGe12KFSBfDSbULpXmRV/EmGcuMMRcvFVBHqE88xm\nswDKzSVJzcAA8qRdw45tWVGRKPsRJdme208JoQH4JJXElDKNypCnWDMv6aGWL0zA\nILPMClLd5LVQE2I6HAnRqhIZAgMBAAGjggIIMIICBDCBkwYDVR0jBIGLMIGIgBSc\nBiRAi4nDe0/cH3ewdzp76hpyqKFtpGswaTELMAkGA1UEBhMCS1IxDTALBgNVBAoM\nBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENl\nbnRyYWwxGzAZBgNVBAMMEktpc2EgVGVzdCBSb290Q0EgNoIBATAdBgNVHQ4EFgQU\nNkPglTCMV+5YwNtEhtcStYbueLkwDgYDVR0PAQH/BAQDAgEGMHwGA1UdIAEB/wRy\nMHAwbgYEVR0gADBmMDAGCCsGAQUFBwIBFiRodHRwOi8vd3d3LnJvb3RjYS5vci5r\nci9yY2EvY3BzLmh0bWwwMgYIKwYBBQUHAgIwJh4kx3QAIMd4yZ3BHLKUACDC3NXY\nxqkAIMd4yZ3BHMeFssiy5AAuMCoGA1UdEQQjMCGgHwYJKoMajJpECgEBoBIwEAwO\nKOyjvCnsvZTsiqTsvaQwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8EBTAD\ngAEAMG4GA1UdHwRnMGUwY6BhoF+GXWxkYXA6Ly8yMTEuMTc1LjgxLjEwMjo2ODkv\nQ049VEVTVC1ST09ULVJTQS1DUkwzLE9VPVJPT1RDQSxPPUtJU0EsQz1LUj9hdXRo\nb3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAdWBx9jYyMpEz\nU8/Szh80Ouhri0alVMNVV+e78QEZvQzB2IRWcLHs1EwPf2bLEEi9lRLJT9ObTPCP\ngrusdR1siuKXzkI7DQxLSI3WiEyfnBSvN1hpRDQ2SnDpwOcdh9Rsh85KOucC2B1S\nI6zTMWe4mcWMQMISeJWasVM943ySn3IS73VOKgbHf7VRGAep3CDqlAuaYPnFI69c\niJj5FW+6zfCywds/ZpiAhy1kRWGN3NXvOteCczyP3DkdV6d/WmcGociHigg/BzNL\noG1DTgNXi7QqE+mDHkS6b+cgh8LbEAGc48jSFQ5Do2BcJE737if6+CBYX+QK5noo\n/qMzmQMz8Q==\n-----END CERTIFICATE-----\n";
var testSignKoreaCA5 = "-----BEGIN CERTIFICATE-----\nMIIFQzCCBCugAwIBAgIBBTANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTE4\nMDExNTA3MTUzOVoXDTI4MDExNTA3MTUzOVowVTELMAkGA1UEBhMCS1IxEjAQBgNV\nBAoMCVNpZ25Lb3JlYTEVMBMGA1UECwwMQWNjcmVkaXRlZENBMRswGQYDVQQDDBJT\naWduS29yZWEgVGVzdCBDQTUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQC3FscnYFsEPWmWUdvdqp++bsri3gGpE+cHLeeVrnyXBpsq4X1P+LbLw1yGKrwK\nsn+RxoYawmCc6n6FddWmm2P4x858xZ9aC68cz57eSYyIBfDgbUlnaZBv6+wh4k45\nVt5vxecOwbM2Egx+iBgcoqEXtngK9R1xKV1JBf8+IBu/PNmCWgi1KuB88JeGJ9qU\nKJCZrtBPnKtoGhvQENgVbuBugMNgo7JoGsp6OaSZIfwyRqL743+z2m7PJyIw+cXT\n/u5RQq4II1FZb37hsntgaR4sQtnFXFWqSH5FRgeD8tjBMg1ASfWVOWi8TUV2nG22\nqnoUm6m62AEA/VdRX6Teas1JAgMBAAGjggIIMIICBDCBkwYDVR0jBIGLMIGIgBRY\nyheJsIX4eNzTer8B8qBAPPXB2KFtpGswaTELMAkGA1UEBhMCS1IxDTALBgNVBAoM\nBEtJU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENl\nbnRyYWwxGzAZBgNVBAMMEktpc2EgVGVzdCBSb290Q0EgN4IBATAdBgNVHQ4EFgQU\n8XCpr2/PnYusgYXMFvR82YVcDMQwDgYDVR0PAQH/BAQDAgEGMHwGA1UdIAEB/wRy\nMHAwbgYEVR0gADBmMDAGCCsGAQUFBwIBFiRodHRwOi8vd3d3LnJvb3RjYS5vci5r\nci9yY2EvY3BzLmh0bWwwMgYIKwYBBQUHAgIwJh4kx3QAIMd4yZ3BHLKUACDC3NXY\nxqkAIMd4yZ3BHMeFssiy5AAuMCoGA1UdEQQjMCGgHwYJKoMajJpECgEBoBIwEAwO\nKOyjvCnsvZTsiqTsvaQwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8EBTAD\ngAEAMG4GA1UdHwRnMGUwY6BhoF+GXWxkYXA6Ly8yMTEuMTc1LjgxLjEwMjo2ODkv\nY249VEVTVC1ST09ULVJTQS1DUkw3LG91PVJPT1RDQSxvPUtJU0EsYz1LUj9hdXRo\nb3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAgtmcXdraZHQJ\nWfpvG6c1xNLzt+A855pwAEmt4EJZxpsckKFgRha44KZdaOy36RE8kB8CFoVChlek\nAEx4a+jspT9W2Lzp67sJ92A/NBGMmlWtl1dAfmmCYYmpCW6i6EID132jeK7fXa1J\n/q+DXWVWhalY3CaLV/Utqca+FIzKtRtJ6mcx3A6PXkuKHkq0muO/Go8Ut/I1BVrL\ncMYrLwNyznXBXjXn7oaETKGXRRwHeYE6aKW/714IFKePhMEA/ZMTCHOlI+c+TZYg\n6JkzpqcSXxAuoovAaSs0TUveL0a1WDa/v+cUgxAiVBqhnRGJDAw3ZSMpGo+1Ogsv\ngQiB4kVgmA==\n-----END CERTIFICATE-----\n";
var testINIPASS_CA2 = "-----BEGIN CERTIFICATE-----\nMIIFQzCCBCugAwIBAgIBEzANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTE4\nMDEyMjA0NDcxM1oXDTI4MDEyMjA0NDcxM1owUjELMAkGA1UEBhMCS1IxEDAOBgNV\nBAoMB0lOSVBBU1MxFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEaMBgGA1UEAwwRSU5J\nUEFTUyBURVNUIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCK\nHOkNMnEbdllUZJXEvaMZ2I/iXaweSvaiGmvHjEId5y/NatPMp9URnmjPfo79OUgA\nSeHuCcsd0cs7RWXInNEETvJkBkOZI97bgT01kMVzR0PkkqCQBSZ+XmHzlzPlcJUF\n0FciiAI/TzWxfHFeUmJdIP/eliD7L0uFXOkq5jXXp/NfcVbkyysH66nZ9+v2Umys\nO9MzMMENRNtBkJc+DxuOUe0ZeWWQ38hvBWx43hr1UKEBzsox9cMWGdyMy49ZEZ6y\nyPBtUumCanE2KRC4YbKXFb/q2lkvoilVUKRqf5EAaP2xUMYJhfmmApsuCG11EEIT\nLYZVCaFkYSDVcWsstpSXAgMBAAGjggILMIICBzCBkwYDVR0jBIGLMIGIgBRYyheJ\nsIX4eNzTer8B8qBAPPXB2KFtpGswaTELMAkGA1UEBhMCS1IxDTALBgNVBAoMBEtJ\nU0ExLjAsBgNVBAsMJUtvcmVhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IENlbnRy\nYWwxGzAZBgNVBAMMEktpc2EgVGVzdCBSb290Q0EgN4IBATAdBgNVHQ4EFgQU0LKc\np5tD8r0Xb663BOD7U3ZrBdwwDgYDVR0PAQH/BAQDAgEGMHwGA1UdIAEB/wRyMHAw\nbgYEVR0gADBmMDAGCCsGAQUFBwIBFiRodHRwOi8vd3d3LnJvb3RjYS5vci5rci9y\nY2EvY3BzLmh0bWwwMgYIKwYBBQUHAgIwJh4kx3QAIMd4yZ3BHLKUACDC3NXYxqkA\nIMd4yZ3BHMeFssiy5AAuMCoGA1UdEQQjMCGgHwYJKoMajJpECgEBoBIwEAwO7J20\n64uI7YWNKOyjvCkwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8EBTADgAEA\nMHEGA1UdHwRqMGgwZqBkoGKGYGxkYXA6Ly9kaXJ0c3QuaW5pcGFzcy5jb206Mzg5\nL2NuPVRFU1QtUk9PVC1SU0EtQ1JMLG91PVJPT1RDQSxvPUtJU0EsYz1LUj9hdXRo\nb3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAHayyQ/XUFFie\nJvNiQRZDCuELsxnNnEE2pNjqHp+MhLvZ+Kx3WTl4TnWIdksQIgXZtYDmY7ZB/Pgd\nN05pHWybihxUmsDuYTpYR2GbYPxQAk9mvOYFDfZ/m8X/2vWH7B/xRtI/BNME+CW+\nmZesnJeXm6ziVwCMEjZLrES3eebzRdHxF3MgN/DwpwqWD2xTP0+dFpTSQ4DEYG7P\nrv4iXaWX2rVPwAlYn0WFMajbkQDisOdS2weSMv7ZrWwMsRqwBEci8EkKFhJ4xWcw\nN4r+gl12KozB39SexGdSiz9hzrCSRL1jelFPfF5wjhTu1tT4OrPMUKSEcqvtPXFa\nfMySIvxXsQ==\n-----END CERTIFICATE-----\n";
var initech_ca_internal = "-----BEGIN CERTIFICATE-----\nMIID3TCCAsWgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBuMQswCQYDVQQGDAJrcjEO\nMAwGA1UEBwwFc2VvdWwxEDAOBgNVBAoMB2luaXRlY2gxDTALBgNVBAsMBHJvb3Qx\nDTALBgNVBAMMBHJvb3QxHzAdBgkqhkiG9w0BCQEMEHJvb3RAaW5pdGVjaC5jb20w\nHhcNMTcwOTAzMTUwMDAwWhcNMjQwOTAzMTQ1OTU5WjBoMQswCQYDVQQGDAJrcjEO\nMAwGA1UEBwwFc2VvdWwxEDAOBgNVBAoMB2luaXRlY2gxCzAJBgNVBAsMAmNhMQsw\nCQYDVQQDDAJjYTEdMBsGCSqGSIb3DQEJAQwOY2FAaW5pdGVjaC5jb20wggEhMA0G\nCSqGSIb3DQEBAQUAA4IBDgAwggEJAoIBAH9r7QLwORFfihinTbWKzjmEyeDHS6Yb\nn98xCuo2jA9PxfCJVpuDR0MFxad2cDAPVnLQjBu7HQm26piWcHRS1fS0BJp+1krE\neU6tWCPLAyAU4Fv+t1GUfoormxc5YS8ZAjJCwTlOBEMpRQ5wUd6EaUcJjXBNEb1F\npYFlRgEZDWkD+Nyd+PQg2Vk4mdHI5syCXYXiTcJE8LVRSDCgQ4jBGXt4G0buhfSB\noWN0cl1Jqh5HF3WWJcvKreDjT9O/MIeMPfBir7M5dZz44qng/vmBOLA+bqp2yeYE\ngt/f0ZRXmst67Gcs6HuVLI12rXbJzsRmcPvY0ZUrQTNzc1tfvQfguYsCAwEAAaOB\njDCBiTAdBgNVHQ4EFgQUDSnlpltTR5BYiE6qutp01MZTZ8AwIgYDVR0jBBswGYAU\nXqtULzVK+pmSFI5eG6i4SblPOoqCAQEwDgYDVR0PAQH/BAQDAgDGMCAGA1UdJQEB\n/wQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAzASBgNVHRMBAf8ECDAGAQH/AgEAMA0G\nCSqGSIb3DQEBCwUAA4IBAQADKya4SEKaYCaRz3ZsXvWwkt7zLgywr0BirOuodRDf\nwpFLAoWNg4GbrjRaMJWKtd+VmRrPV4ehemwIaFpNudMaj52/EpVrzPCG+8flxeTt\nugC42LGkf1m7J1aVGLG3IWUIp7sTbBBqah+sOj5mBUbicU7xHQsISWFoSDtC4QOb\nixqKW0xCi9AW4kvs4YzTVuWTo5Ed4n4GhrGxk9QiCyj0XWbWwtLJR71yPkqVg0ae\neAXEKEP1FXjppaKT2LBscH4iSRDgbn7pMI3wLXU/FjvuUh9Zdjr0gMzcjpQBfaDf\n1wCT84cSdPD3Nc+PyHsX00JxtubFKyB5NhWZRbs/rvfj\n-----END CERTIFICATE-----\n";
var initech_ca = "-----BEGIN CERTIFICATE-----\nMIIDsTCCApmgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGDAJLUjEV\nMBMGA1UECgwMSU5JVEVDSF9ERU1PMRowGAYDVQQLDBFJTklURUNIX0RFTU9fUk9P\nVDEUMBIGA1UEAwwLVFNfUEtJX0RFTU8wHhcNMTkwOTE0MTUwMDAwWhcNMzkwOTE1\nMTQ1OTU5WjBUMQswCQYDVQQGDAJLUjEVMBMGA1UECgwMSU5JVEVDSF9ERU1PMRgw\nFgYDVQQLDA9JTklURUNIX0RFTU9fQ0ExFDASBgNVBAMMC1RTX1BLSV9ERU1PMIIB\nITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQBWPyQ0hzwlxe3iyAiOg1Es7Cet\nK/yZ/MguQMNcpB6csBFs94h8amTXDwtpX0dXh9XLCntL9HYDU/iRZApZcH1lS3E/\nSAzIVYRNnmQqMTbOB2sNRqlUL6Px5gHwRH0Cjuus3nUw755WHciWt54l9q+j+5/2\nouY/8g/2eSd5ykUmYcEHFTOXEwtbgQKAdNO3GBYM6sutxuV+aaCwJrDpLB//eRFO\nVj8NbY4wtMsyJFDK7zs1BeZNL2Bpb6X1ejjbd4SrIQMsgpAEECDhJk6Tx7vufVO6\nvjpt31heaibXO43JDuuc98wD35j13R/CtG0nYXMfCzn2zBQ9wmdDdNVP+9ULAgMB\nAAGjgYwwgYkwHQYDVR0OBBYEFJSghgQ8IILy3qBPCHMdiEM9l2XOMCIGA1UdIwQb\nMBmAFLI5F23QLt9CvzuW3YlPMwWW+hFyggEBMA4GA1UdDwEB/wQEAwIAxjAgBgNV\nHSUBAf8EFjAUBggrBgEFBQcDAQYIKwYBBQUHAwMwEgYDVR0TAQH/BAgwBgEBAAIB\nADANBgkqhkiG9w0BAQsFAAOCAQEAovVrkADHO913e3kxUhE2Ooe10F/v41wv83j5\n9KP7tw/lzfJuBkhr4039TXHkTMwlrUWvCl5mR7k1bozHUQa0BMagrNLp2Q9Z2F7S\nom9Tnx/N2ZhyrJj47LDbywSYIiwD7KVS+P5JWXdfNqS12r6A9X3ewMYFBEo6xgSO\ntQz0+rpTqKiq8CJBOe85XlgoG4StguaYazMEJPehKYkqTMv1BDYwmdHK23NREZZ/\ni3FZkOPWRPhPge/oDA2N0t9tTKZqCxTmvsJb1ByR7+H1pd9uFJeNYOqLL9HYJnan\nIn7/df2DsDLGHiZfpuLvxUa3Mwe9TXdNOg1DcdD7gBSXWtK8Uw==\n-----END CERTIFICATE-----\n";
var testYessignClass5_2048 = "-----BEGIN CERTIFICATE-----\nMIIFSTCCBDGgAwIBAgIBGTANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJLUjEN\nMAsGA1UECgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRo\nb3JpdHkgQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3MB4XDTIw\nMDcxNjAyMDAzM1oXDTMwMDcxNjAyMDAzM1owVzELMAkGA1UEBhMCa3IxEDAOBgNV\nBAoMB3llc3NpZ24xFTATBgNVBAsMDEFjY3JlZGl0ZWRDQTEfMB0GA1UEAwwWeWVz\nc2lnbkNBLVRlc3QgQ2xhc3MgNTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAMMQokHrWGK5VJxp/m4hVsiw9fjp98mbae/qXVUN6uDeP/gFXknIqLAyycky\n3rFvHBUtLEJbcQTH+2sxge/xTKBLYuQXLMZTvaQv7GewoQXg0b2vXKmSn5OQBhR/\nB4vaM3riP2d9ZC9zrgXfjCd/i6whB/7mvMzywvc3Va/4ZqqVkyyecuSSwAjGEW63\ngfsz85fbqSz+eNRenfQI0uIAyciSzFx5aTvKp4E4rkXcRZBgNqZ1X1Y0ATY8/1TE\nNR16pxxUNXeuHZ8TcORhaBz/fCT9VcZBTYST7iXFYHEfaU9NOdF8Z/KnPcJB/7+d\nd8UtZ5rKkgOT8Scq6qyZd1s0W/cCAwEAAaOCAgwwggIIMIGTBgNVHSMEgYswgYiA\nFFjKF4mwhfh43NN6vwHyoEA89cHYoW2kazBpMQswCQYDVQQGEwJLUjENMAsGA1UE\nCgwES0lTQTEuMCwGA1UECwwlS29yZWEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nQ2VudHJhbDEbMBkGA1UEAwwSS2lzYSBUZXN0IFJvb3RDQSA3ggEBMB0GA1UdDgQW\nBBSj1Tk2MRU2T7JRwNoIOzN4gTDPjzAOBgNVHQ8BAf8EBAMCAQYwfAYDVR0gAQH/\nBHIwcDBuBgRVHSAAMGYwMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucm9vdGNhLm9y\nLmtyL3JjYS9jcHMuaHRtbDAyBggrBgEFBQcCAjAmHiTHdAAgx3jJncEcspQAIMLc\n1djGqQAgx3jJncEcx4WyyLLkAC4wKwYDVR0RBCQwIqAgBgkqgxqMmkQKAQGgEzAR\nDA/quIjsnLXqsrDsoJzsm5AwEgYDVR0TAQH/BAgwBgEB/wIBADAPBgNVHSQBAf8E\nBTADgAEAMHEGA1UdHwRqMGgwZqBkoGKGYGxkYXA6Ly9zbm9vcHkueWVzc2lnbi5v\nci5rcjo2MDIwL2NuPUtJU0EtVEVTVC1BUkw3LG91PVJPT1RDQSxvPUtJU0EsYz1L\nUj9hdXRob3JpdHlSZXZvY2F0aW9uTGlzdDANBgkqhkiG9w0BAQsFAAOCAQEAjvo2\neuBwqCnmFHpkdzmKbfuttbm4D2hxXLKQmzJg4TTVH2uLn2J98l/A4SfuAhv25bKd\nwEdMKos21wcPpEpu5TtKVBxtP0eU2hRAcpDdSxHC8RDkUjys//AL14jQb1WBoCVc\nkS2YRlWGbHFqRXW9HY/IM7yWjGR/f5Pbbn3oT817WCynpZUq3sGrR8MMJN/Usonq\nk9OWLTsR0pEXi1W/Y45Z2r1TLVbc7oj3Lr+nCMEDCfQ0g+60YXSet15BG8WuIlMU\ngVO31SSLYc8KhzVxkspw+9GemDrR4hsIXsZLDaSiFb3ZfLusmOp+WrOJnwDPoguP\nhediWuvynIiPjn+lHg==\n-----END CERTIFICATE-----\n";

// Real-CA 인증서 목록 (2048)
var real2048CACert = "";
real2048CACert += realSignKorea_CA3;		//한국증권전산(코스콤)
real2048CACert += realSignGate_CA5;			//한국정보인증
real2048CACert += realCrossCertCA3;			//한국전자인증
real2048CACert += realTradeSignCA3;			//한국무역정보통신
real2048CACert += realYessignClass2_2048;
real2048CACert += realINIPASS_CA;
real2048CACert += realInitech_ca;
real2048CACert += realYessignClass3_2048;
real2048CACert += realCrossCertCA4
real2048CACert += realSignGate_CA6
real2048CACert += realSignKorea_CA4
real2048CACert += realTradeSignCA4

// Test-CA 인증서 목록 (2048)
var test2048CACert = "";
test2048CACert += testCrossCertCA4;
test2048CACert += testSignGateFTCA4;
test2048CACert += testSignGateFTCA6;
test2048CACert += testSignKoreaCA3;
test2048CACert += testTradeSign_2048;
test2048CACert += testTradeSign_08;
test2048CACert += testYessignClass3_2048;
test2048CACert += testYessignClass4_2048;
test2048CACert += testSignKorea_CA4;
test2048CACert += testSignKoreaCA5;
test2048CACert += testINIPASS_CA2;
test2048CACert += initech_ca_internal;
test2048CACert += initech_ca;
test2048CACert += testYessignClass5_2048;

// FilterCert Real 인증서 IssuerDN
var realIssuerYessignCAClass2 = "IssuerDN=CN=yessignCA Class 2,OU=AccreditedCA,O=yessign,C=kr";
var realIssuerSignKoreaCA3 = "IssuerDN=CN=SignKorea CA3,OU=AccreditedCA,O=SignKorea,C=KR";
var realIssuerSignGATECA5 = "IssuerDN=CN=signGATE CA5,OU=AccreditedCA,O=KICA,C=KR";
var realIssuerCrossCertCA3 = "IssuerDN=CN=CrossCertCA3,OU=AccreditedCA,O=CrossCert,C=KR";
var realIssuerTradeSignCA3 = "IssuerDN=CN=TradeSignCA3,OU=AccreditedCA,O=TradeSign,C=KR";
var realIssuerINIPASS_CA = "IssuerDN=CN=INIPASS CA,OU=AccreditedCA,O=INIPASS,C=KR";

// FilterCert Real 인증서 IssuerDN(2022년 3월 추가)
var realIssuerYessignCAClass3 = "CN=yessignCA Class 3,OU=AccreditedCA,O=yessign,C=KR";
var realIssuerSignKoreaCA4 = "CN=SignKorea CA4,OU=AccreditedCA,O=SignKorea,C=KR";
var realIssuerSignGATECA6 = "CN=signGATE CA6,OU=AccreditedCA,O=KICA,C=KR";
var realIssuerCrossCertCA4 = "CN=CrossCertCA4,OU=AccreditedCA,O=CrossCert,C=KR";
var realIssuerTradeSignCA4 = "CN=TradeSignCA4,OU=AccreditedCA,O=TradeSign,C=KR";

// FilterCert Test 인증서 IssuerDN
var testIssuerCrossCertCA3 = "IssuerDN=CN=CrossCertTestCA3,OU=AccreditedCA,O=CrossCert,C=KR";
var testIssuerSignGateFTCA4 = "IssuerDN=CN=signGATE FTCA04,OU=AccreditedCA,O=KICA,C=KR";
var testIssuerSignGateFTCA6 = "IssuerDN=CN=signGATE FTCA06,OU=AccreditedCA,O=KICA,C=KR";
var testIssuerSignKoreaCA3 = "IssuerDN=CN=SignKorea Test CA3,OU=AccreditedCA,O=SignKorea,C=KR";
var testIssuerSignKoreaCA5 = "IssuerDN=CN=SignKorea Test CA5,OU=AccreditedCA,O=SignKorea,C=KR";
var testIssuerTradeSign = "IssuerDN=CN=TradeSignCA2011Test2,OU=AccreditedCA,O=TradeSign,C=KR";
var testYessignClass2 = "IssuerDN=CN=yessignCA-Test Class 2,OU=AccreditedCA,O=yessign,C=kr";
var testYessignClass3 = "IssuerDN=CN=yessignCA-Test Class 3,OU=AccreditedCA,O=yessign,C=kr";
var testYessignClass4 = "IssuerDN=CN=yessignCA-Test Class 4,OU=AccreditedCA,O=yessign,C=kr";
var testIssuerINIPASS_CA2 = "IssuerDN=CN=INIPASS TEST CA 2,OU=AccreditedCA,O=INIPASS,C=KR";
var testYessignClass5 = "IssuerDN=CN=yessignCA-Test Class 5,OU=AccreditedCA,O=yessign,C=kr";

var pipe = "|";

var realIssuerDN = "";
realIssuerDN += realIssuerYessignCAClass2 + pipe;
realIssuerDN += realIssuerSignKoreaCA3 + pipe;
realIssuerDN += realIssuerSignGATECA5 + pipe;
realIssuerDN += realIssuerCrossCertCA3 + pipe;
realIssuerDN += realIssuerTradeSignCA3 + pipe;
realIssuerDN += realIssuerINIPASS_CA + pipe;
realIssuerDN += realIssuerYessignCAClass3; + pipe;
realIssuerDN += realIssuerSignKoreaCA4 + pipe;
realIssuerDN += realIssuerSignGATECA6 + pipe;
realIssuerDN += realIssuerCrossCertCA4 + pipe;
realIssuerDN += realIssuerTradeSignCA4;

var testIssuerDN = "";
testIssuerDN += testIssuerCrossCertCA3 + pipe;
testIssuerDN += testIssuerSignGateFTCA4 + pipe;
testIssuerDN += testIssuerSignGateFTCA6 + pipe;
testIssuerDN += testIssuerSignKoreaCA3 + pipe;
testIssuerDN += testIssuerSignKoreaCA5 + pipe;
testIssuerDN += testIssuerTradeSign + pipe;
testIssuerDN += testYessignClass2 + pipe;
testIssuerDN += testYessignClass3 + pipe;
testIssuerDN += testYessignClass4 + pipe;
testIssuerDN += testIssuerINIPASS_CA2 + pipe;
testIssuerDN += testYessignClass5;

var realCA = {
	//금결원
	'NPKI': {
		realSignKorea3: realSignKorea_CA3,
		realSignGate5: realSignGate_CA5,
		realCrossCert3: realCrossCertCA3,
		realTradeSign3: realTradeSignCA3,
		realYessignClass2: realYessignClass2_2048,
		realINIPASS_CA: realINIPASS_CA,
		realYessignClass3: realYessignClass3_2048,
		realCrossCert4: realCrossCertCA4,
		realSignGate6: realSignGate_CA6,
		realSignKorea4: realSignKorea_CA4,
		realTreadeSign4: realTradeSignCA4
		
	},

	//행자부
	'GPKI': {
	},

	// 국방부
	'MPKI': {
	},

	// 교육부
	'EPKI': {
	},
	//
	'PPKI': {
	}
};


var testCA = {
	// 금결원
	'NPKI': {
		testCrossCert: testCrossCertCA4,
		testSignGate: testSignGateFTCA4,
		testSignKorea: testSignKoreaCA3,
		testSignKorea5: testSignKoreaCA5,
		testTradeSign: testTradeSign_2048,
		testYessignClass3: testYessignClass3_2048,
		testYessignClass4: testYessignClass4_2048,
		testINIPASS: testINIPASS_CA2,
		testYessignClass5: testYessignClass5_2048
	},
	//행자부
	'GPKI': {
	},

	// 국방부
	'MPKI': {
	},

	// 교육부
	'EPKI': {
	},
	//
	'PPKI': {
	}
};


var CACert;				// CA 인증서 목록
var IssuerDNFilter;		// IssuerDN 필터 목록


// 고객사 개발 HOST 인 경우
if (window.location.host == CW_DEV_HOST) {
	//개발 서버 (Real + Test)
	CACert = real2048CACert + test2048CACert;
	IssuerDNFilter = realIssuerDN + pipe + testIssuerDN;
	// 테스트 CA
	YessignCAIP = CAIPInfo.test.yessign;
	CrossCertCAIP = CAIPInfo.test.crosscert;
	SignKoreaCAIP = CAIPInfo.test.signkorea;
	SignGateCAIP = CAIPInfo.test.signgate;
	INIPassCAIP = CAIPInfo.test.inipass;
	InitechCAIP = CAIPInfo.test.initech;

// 고객사 테스트 HOST 인 경우
} else if (window.location.host == CW_TEST_HOST) {
	//테스트 서버 (Real + Test)
	CACert = real2048CACert + test2048CACert;
	IssuerDNFilter = realIssuerDN + testIssuerDN;
	// 테스트 CA
	YessignCAIP = CAIPInfo.test.yessign;
	CrossCertCAIP = CAIPInfo.test.crosscert;
	SignKoreaCAIP = CAIPInfo.test.signkorea;
	SignGateCAIP = CAIPInfo.test.signgate;
	INIPassCAIP = CAIPInfo.test.inipass;
	InitechCAIP = CAIPInfo.test.initech;

// 고객사 운영 HOST 인 경우
} else if (window.location.host == CW_REAL_HOST) {
	// 운영 서버 (Real)
	CACert = real2048CACert;
	IssuerDNFilter = realIssuerDN;
	// 리얼 CA
	YessignCAIP = CAIPInfo.real.yessign;
	CrossCertCAIP = CAIPInfo.real.crosscert;
	SignKoreaCAIP = CAIPInfo.real.signkorea;
	SignGateCAIP = CAIPInfo.real.signgate;
	INIPassCAIP = CAIPInfo.real.inipass;
	InitechCAIP = CAIPInfo.real.initech;

// 고객사 기타 HOST 인 경우
} else {
	//기타 (Real + Test)
	CACert = real2048CACert + test2048CACert;
	IssuerDNFilter = realIssuerDN + testIssuerDN;
	// 리얼 CA
	YessignCAIP = CAIPInfo.real.yessign;
	CrossCertCAIP = CAIPInfo.real.crosscert;
	SignKoreaCAIP = CAIPInfo.real.signkorea;
	SignGateCAIP = CAIPInfo.real.signgate;
	INIPassCAIP = CAIPInfo.real.inipass;
	InitechCAIP = CAIPInfo.test.initech;
}

/************************************************************
 * @brief		CrossWeb EX 클라이언트 초기화 설정정보
 ************************************************************/
var CROSSWEBEX_CS_POLICY = {

	// 개별 API를 이용하여 설정하는 값
	logoPath: LogoURL,								// 정책 설정 - 인증서 선택창의 이미지 변경
	disableInvalidCert: false,						// 정책 설정 - 만료된 인증서 표시여부 (true: 만료된 인증서 표시하지 않음 / false: 만료된 인증서 표시)
	loadCACert: CACert,							    // 정책 설정 - CA 인증서 로드 (CA 인증서 필터링)
	loadCert: SCert,								// 정책 설정 - 서버 인증서 로드
	CACHE_URL: "localhost",							// 정책 설정 - 인증서 캐쉬 공통 도메인 설정
	UseCertMode: 1,								    // 정책 설정 - 공인인증서 고도화 여부 default (0)
	PcInfo: {										// 정책 설정 - PC 정보 취득
		Use: false,									// 정책 설정 - PC 정보 취득 - 사용 유무 (true: 사용 / false: 사용안함)
		SiteName: "NONGHYUP",						// 정책 설정 - PC 정보 취득 - 사이트 이름 (CITIBANK / HANA / NONGHYUP / SHINHAN)
		PcInfoUse: "2",								// 정책 설정 - PC 정보 취득 - PC 정보 수집시 암호화 여부 (1: 평문 / 2: 암호화)
		ServerIP: "61.37.254.133",					// 정책 설정 - PC 정보 취득 - 서버 IP
		ServerPort: "80",							// 정책 설정 - PC 정보 취득 - 서버 PORT
		RetryCnt: "2",								// 정책 설정 - PC 정보 취득 - 재시도 횟수
		Replace: "1",								// 정책 설정 - PC 정보 취득 - 정보 교체 (0: 정보 교체 안함 / 1: 정보 교체 사용)
		FdsUse: "1"									// 정책 설정 - PC 정보 취득 - FDS 사용  (0: FDS 정보 수집 안함 / 1: FDS 정보 수집 사용)
	},

	// setPropertyAdd, setPropertyEX를 이용하여 한번에 설정하는 값
	property: {
		URLEncodeConv: "NO",						// 정책 설정 - urlencode를 euc-kr로 변경
		GetExhibitionCertStoreInfo: "TRUE",		    // 정책 설정 - 인증서 제출한 스토리지를 서버로 전달 default (FALSE)
		certmanui_hsm: "yes",						// 정책 설정 - 보안토큰 활성화
		YessignCertPasswordPolicy: "1",			    // 정책 설정 - 비밀변호 체계 강화 설정
		certmanui_topmost: "yes",					// 정책 설정 - 인증서나 제출창을 맨 위로 띄우는 함수
		certmanui_language: "OFF",					// 정책 설정 - 인증서창 언어설정 (KOR, ENG)
		certmanui_SelectCertUIMode: "list",		    // 정책 설정 - 전자서명 내역 표시여부 (list, text, no)
		OldCertNotSafeMsg: "1",					    // 정책 설정 - 1024 bit 인증서 보안경고창 출력여부
		certmanui_showalertbanner: "no",			// 정책 설정 - 보이스피싱 경고문구 표시
		//certmanui_alertbannerurl: TrustBannerURL,	// 정책 설정 - 보이스피싱 경고문구 URL

		// 정책 설정 - 휴대폰 서비스 활성화
		certmanui_phoneServiceList: "infovine|mobisign",

		// Infovine 설정
		// 정책 설정 - Infovine - 모듈 버전
		certmanui_phoneVer: "1,4,1,3",
		// 정책 설정 - Infovine - 정책 설정
		certmanui_phone: "KJBANK|" + window.location.protocol + "//" + window.location.host + "/resource/product/infovine/DownloadList&INITECH|AHNLABST",
		// 정책 설정 - Infovine - 다운로드 URL
		certmanui_phoneURL: window.location.protocol + "//" + window.location.host + "/resource/product/infovine/infovine/download.html",

		// 가상키보드 설정
		// 정책 설정 - 가상키보드 (업체코드 라온 : lumen)
		// certmanui_screenkeyboardprovider: "lumen",
		// 정책 설정 - url부분은 URLEncoding 하여 입력(경로는 가상키보드 업체에 확인 필요)
		// certmanui_screenkeyboardprovideroption: "url=http://localhost:8080/SW/vender/initech_crt/tk_crt.jsp&width=810&height=340",
		// 정책 설정 - 가상키보드 사용여부(-1 또는 설정 안함 : 사용안함, 버튼보이지 않음 / 0:사용안함, 비활성화 / 1:사용, 사용자가 버튼 클릭시 가상키보드 표시, 물리 키보드 입력가능 / 2: 사용, 사용자가 버튼 클릭시 가상키보드 표시, 입력란을 비활성화 하여 물리키보드 입력 불가능)
		// certmanui_screenkeyboardcheckmode: "1",
		// 정책 설정 - 인증서 발급/재발급/갱신 후 이동식 저장매체에 인증서 추가 저장(YES: 추가저장 함, NO: 추가저장하지 않음)
		PopupSaveCertMsgToMovableMedia: "NO",
		// 정책 설정 - 사설 인증서 발급 키 길이 (키 길이: 1024, 2048)
		SetBitPKCS10CertRequest: "2048",
		IssueSkipOKAlertUI: "no",
		// 정책 설정 - EVID 암호화용 CA 인증서
		EvidCACertPKCS10CertRequest: window.location.protocol + "//" + window.location.host + "/initech/demo/pc/crossweb_ex_web6/cert_center_private/evid_ca_cert.jsp"
	}
};


/************************************************************
 * @brief		CrossWeb EX 인터페이스
 ************************************************************/
IniSafeCrossWebEx = function () {

	/************************************************************
	 * @brief		기본 옵션
	 ************************************************************/
	var baseOption = {
		isHtml5: !GINI_DYNAMIC_LOAD.isUseOnlyCS() && GINI_supportHtml5(),
		urlEnc: true,		// 필수
		iniCache: false,
		viewType: "GRID",	// "GRID", "TEXT", "PAGE", "NONE"
		useOnlyCS: GINI_DYNAMIC_LOAD.isUseOnlyCS()
	};

	/************************************************************
	 * @brief		'name'='value' 형태의 data배열 생성
	 * @param		option.targetFormName
	 * @param		option.targetFieldCss
	 * @retval		'name'='value' 형태의 data배열
	 ************************************************************/
	function makeData(option) {

		if (typeof option !== "object" || typeof option === "undefined")
			return null;

		if (typeof option.targetFormName === "undefined" || typeof option.targetFieldCss === "undefined") {
			if ("undefined" === typeof option.data)
				return null;

			return option.data;
		}

		var targetForm = document.getElementsByName(option.targetFormName)[0];

		if (!targetForm) return;

		var targetElems = targetForm.getElementsByClassName(option.targetFieldCss);
		var postDataArr = [];

		for (var i = 0; i <= targetElems.length - 1; i++) {

			if (targetElems[i].tagName !== "INPUT" && targetElems[i].tagName !== "SELECT") continue;

			if (targetElems[i].tagName === "INPUT" && targetElems[i].type === "file") {
				/*
				 * 파일의 경우 처리 방식이 업무 쪽과 연동되기 때문에  논의 필요
				 * (예) 파일을 읽어들인 후 base64 인코딩한 후, 원문 데이타에 포함
				 */
			} else {
				if (targetElems[i].getAttribute("name")) {
					postDataArr.push(targetElems[i].getAttribute("name") + "=" + targetElems[i].getAttribute("value"));
				}
			}
		}

		if (postDataArr.length > 0) {
			return option.urlEnc ? encodeURIComponent(postDataArr.join('&')) : postDataArr.join('&');
		} else {
			return null;
		}
	}

	/************************************************************
	 * @brief		기본옵션값에 추가된 옵션값을 merge한다.
	 * @param		addOption	추가된 옵션값
	 * @retval		merge 된 옵션값
	 ************************************************************/
	function mergeOption(addOption) {

		var retOption = clone(baseOption);

		for (var prop in addOption) {
			if (addOption.hasOwnProperty(prop)) {
				if ('isHtml5' === prop)
					retOption[prop] = retOption[prop] && addOption[prop];
				else if('langType' === prop){
					//모바일 경우에만 셋팅해준다
					if (INI_getPlatformInfo().Mobile){
						sessionStorage.setItem("lang",addOption[prop]);
					}
					retOption[prop] = addOption[prop];
				}
				else
					retOption[prop] = addOption[prop];
			}
		}

		return retOption;
	}

	/************************************************************
	 * @brief		정책 병합
	 * @param policy				정책
	 * @param overlap				오버랩 정책
	 * @retval						병합된 정책
	 ************************************************************/
	function MergePolicy(policy, overlap) {
		var jsonMerged = {};

		for (var key in policy) {
			jsonMerged[key] = policy[key];
		}

		for (var key in overlap) {
			jsonMerged[key] = overlap[key];
		}

		return jsonMerged;
	}

	/************************************************************
	 * @brief		모듈로드대기(html5, thirdParty)
	 ************************************************************/
	function promiseWaitModuleLoad (option) {
		return new Promise(function (resolve, reject) {
			var waitLoad = function () {
				if (true === GINI_DYNAMIC_LOAD.isCompleted() && true === GINI_DYNAMIC_LOAD.isThirdPartyCompleted()) {
					if (option.readyCallback)
						option.readyCallback();
					resolve();
				} else {
					setTimeout(function () {
						waitLoad();
					}, 100);
				}
			};
			waitLoad();
		});
	};

	/************************************************************
	 * @brief		정책 다운로드
	 ************************************************************/
	function promiseDownloadCertPolicy (option) {
		return new Promise(function (resolve, reject) {
			if (option.isHtml5) {
				// 정책 URL 이 존재하는 경우
				if (option.policy_url) {
					Html5Adaptor.ApplyPolicy(option.policy_url);
				}
				resolve();

			} else {
				// 정책 URL 이 존재하는 경우
				if (option.policy_url) {
					CROSSWEBEX_UTIL.DownloadText(option.policy_url, function (result) {
						if (result) {
							// 다운로드된 정책 파싱
							var policyParsed = JSON.parse(result);
							// 다운로드된 정책 URL Decode
							policyParsed.policy = CROSSWEBEX_UTIL.URLDecodeJSONValue(policyParsed.policy);
							// 다운로드된 정책과 오버랩 정책을 머지
							option.policy = MergePolicy(policyParsed.policy, option.policy_overlap);
							// 콜백 함수가 있는 경우 콜백 함수를 호출
							if (option.policy_callback) {
								option.policy_callback(option.policy);
							}
							resolve();
						} else {
							reject("Failed to download policy");
						}
					});
					// 정책 URL 이 존재하지 않는 경우
				} else {
					// 오버랩 정책을 정책으로 설정
					// [18.09.27] Namsu change - policy_overlap이 설정되지 않은 상태에서 option.policy을 무조건 덮어쓰면 정책 설정된 데이터가 날아가는 문제가 발생하여
					//							 if 문으로 조건 검사하도록 수정
					if ( option.policy_overlap ) {
						option.policy = option.policy_overlap;
					} 
					resolve();
				}
			}
		});
	};

	/************************************************************
	 * @brief		캐쉬초기화
	 ************************************************************/
	function promiseInitCache (option) {
		return new Promise(function (resolve, reject) {
			if (option.iniCache) {
				if (option.isHtml5) {
					Html5Adaptor.InitCache(resolve);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.InitCache(resolve);
					});
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		IssuerDN 필터 설정
	 ************************************************************/
	function promiseFilterIssuerDN (option) {
		return new Promise(function (resolve, reject) {
			if (option.filterCertByIssuer && option.filterCertByIssuer.enable) {

				var issuerDNList = IssuerDNFilter;

				if (option.filterCertByIssuer.list) {
					issuerDNList = option.filterCertByIssuer.list;
				}

				if (option.isHtml5) {
					Html5Adaptor.Filter_IssuerDN(issuerDNList, resolve);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.FilterCert('', issuerDNList, resolve);
					});
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		Serial 필터 설정
	 ************************************************************/
	function promiseFilterSerialNo (option) {
		return new Promise(function (resolve, reject) {
			if (option.filterCertBySerialNo) {

				if (option.isHtml5) {
					Html5Adaptor.Filter_SerialNo(option.filterCertBySerialNo, resolve);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.FilterCert('', option.filterCertBySerialNo, resolve);
					});
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		OID-Alias 필터 설정
	 ************************************************************/
	function promiseFilterOIDAlias (option) {
		return new Promise(function (resolve, reject) {
			if (option.filterCertByOIDAlias && option.filterCertByOIDAlias.enable) {

				var OIDAliasList = option.filterCertByOIDAlias.list;

				if (option.isHtml5) {
					Html5Adaptor.Filter_OIDAlias(OIDAliasList, resolve);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.SetProperty("certmanui_oid", OIDAliasList, resolve);
					});
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		OU 필터 설정
	 ************************************************************/
	function promiseFilterOU (option) {
		return new Promise(function (resolve, reject) {
			if (option.filterCertByOU && option.filterCertByOU.enable) {
				var OUList = option.filterCertByOU.list;
				if (option.isHtml5) {
					Html5Adaptor.Filter_OU(OUList, resolve);
				} else {
					//CWEX에는 OU필터 설정하지 않는다
						resolve();
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		언어 설정
	 ************************************************************/
	function promiseSetLang (option) {
		return new Promise(function (resolve, reject) {
			var html5Lang = "", csLang = "";

			if (option.langType) {
				html5Lang = option.langType.toLowerCase();
				csLang = option.langType.toLowerCase();
			}

			if (option.html5Lang) {
				html5Lang = option.html5Lang.toLowerCase();
			}

			if (option.csLang) {
				csLang = option.csLang.toLowerCase();
			}

			if (option.isHtml5) {
				if ("kor" === html5Lang ||
					"eng" === html5Lang) {
					INI_LANGUAGE_HANDLE.setSystemLanguage(html5Lang);
				}
			} else {
				if ("off" === csLang ||
					"kor" === csLang ||
					"chn" === csLang ||
					"eng" === csLang) {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.SetProperty("certmanui_language", csLang, resolve);
					});
				}
			}
			resolve();
		});
	};

	/************************************************************
	 * @brief		전자서명 원문영역 view 스타일
	 ************************************************************/
	function promiseSetPlaintextViewType (option) {
		return new Promise(function (resolve, reject) {
			var htmlViewType = "", csViewType = "";

			if (option.viewType) {
				htmlViewType = option.viewType.toUpperCase();
				csViewType = option.viewType.toUpperCase();

				//CS UI의 경우 값을 setproperty에 맞게 치환
				if ("NONE" === csViewType) {
					csViewType = "no";
				} else if ("GRID" === csViewType || "PAGE" === csViewType) {
					csViewType = "list";
				} else {
					csViewType = "text";
				}
			}

			if (option.plainTextViewType) {
				htmlViewType = option.plainTextViewType.toUpperCase();
			}

			if (option.certUIMode) {
				csViewType = option.certUIMode.toLowerCase();
			}

			if (option.isHtml5) {
				if ("NONE" === htmlViewType || "GRID" === htmlViewType || "PAGE" === htmlViewType || "TEXT" === htmlViewType) {
					INI_PLAINTEXT_VIEW_HANDLER.setPlaintextViewType(htmlViewType);
				}
			} else {
				if ("no" === csViewType || "list" === csViewType || "text" === csViewType) {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.SetProperty("certmanui_SelectCertUIMode", csViewType, resolve);
					});
				}
			}

			resolve();
		});
	};

	/************************************************************
	 * @brief		정책 설정 - 인증서 선택창의 이미지 변경
	 ************************************************************/
	function promiseSetLogoPath (option) {
		return new Promise(function (resolve, reject) {
			if (!option.isHtml5 && option.policy && option.policy.TitleLogoPath)
				CrossWebExWeb6.SetLogoPath(option.policy.TitleLogoPath, resolve);
			else
				resolve();
		});
	};

	/************************************************************
	 * @brief		정책 설정 - 로그인창에서 페기/만료된인증서 표시여부 default (false)
	 ************************************************************/
	function promiseDisableInvalidCert (option) {
		return new Promise(function (resolve, reject) {
			if (!option.isHtml5 && option.policy && option.policy.DisableInvalidCert)
				CrossWebExWeb6.DisableInvalidCert(option.policy.DisableInvalidCert, resolve);
			else
				resolve();
		});
	};

	/************************************************************
	 * @brief		정책 설정 - CA 인증서 로드 (CA 인증서 필터링)
	 ************************************************************/
	function promiseLoadCACert (option) {
		return new Promise(function (resolve, reject) {
			if (!option.isHtml5 && option.policy && option.policy.CACerts)
				CrossWebExWeb6.LoadCACert(option.policy.CACerts, resolve);
			else
				resolve();
		});
	};

	/************************************************************
	 * @brief		정책 설정 - OID 필터 설정
	 ************************************************************/
	function promiseFilterOID (option) {
		return new Promise(function (resolve, reject) {
			if (option.policy && option.policy.CertOIDs) {
				if (option.isHtml5) {
					Html5Adaptor.Filter_OID(option.policy.CertOIDs, resolve);
				} else {
					CrossWebExWeb6.SetProperty("certmanui_realoidfilter", option.policy.CertOIDs, resolve);
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		정책 설정 - 기타 정책
	 ************************************************************/
	function promiseSetProperty (option) {
		return new Promise(function (resolve, reject) {
			if (!option.isHtml5 && option.policy) {
				if (Object.keys(option.policy).length) {
					for (var prop in option.policy) {
						if (option.policy.hasOwnProperty(prop)) {
							CrossWebExWeb6.SetPropertyAdd(prop, option.policy[prop]);
						}
					}
					CrossWebExWeb6.SetPropertyEX(resolve);
				} else {
					resolve();
				}
			} else {
				resolve();
			}
		});
	};

	/************************************************************
	 * @brief		전자서명 원문 Encoding
	 ************************************************************/
	function promiseSetPlainEncoding (option) {
		return new Promise(function (resolve, reject) {

			// 원문 Encoding 옵션이 설정되지 않은 경우
			if (typeof option.plainCharEncoding === 'undefined' || typeof option.plainURLEncoding === 'undefined') {
				resolve();
				return;
			}

			// 원문 Encoding
			var plainCharEncoding = option.plainCharEncoding.toUpperCase();
			var plainURLEncoding = option.plainURLEncoding;

			// HTML5 인 경우
			if (option.isHtml5) {
				var defaultConf = Html5Adaptor.GetDefaultConf();
				// Character Encoding
				if (plainCharEncoding === "UTF-8") {
					defaultConf.Signature.UrlEncodeCharSet.ORIGIRAL_CHAR_SET = "UTF-8";
					defaultConf.Signature.UrlEncodeCharSet.SIGN_CHAR_SET = "UTF-8";
				} else if (plainCharEncoding === "EUC-KR") {
					defaultConf.Signature.UrlEncodeCharSet.ORIGIRAL_CHAR_SET = "UTF-8";
					defaultConf.Signature.UrlEncodeCharSet.SIGN_CHAR_SET = "EUC-KR";
				}
				// URL Encoding
				if (plainURLEncoding) {
					defaultConf.Signature.UrlEncodeCharSet.ORIGIRAL_URL_ENCODE = true;
					defaultConf.Signature.UrlEncodeCharSet.SIGN_URL_ENCODE = true;
				} else {
					defaultConf.Signature.UrlEncodeCharSet.ORIGIRAL_URL_ENCODE = false;
					defaultConf.Signature.UrlEncodeCharSet.SIGN_URL_ENCODE = false;
				}
				resolve();
			// cs 인 경우
			} else {
				resolve();
				// Character Encoding: UTF-8
				// if (plainCharEncoding === "UTF-8") {
				// 	// URL Encoding
				// 	if (plainURLEncoding) {
				// 		CrossWebExWeb6.SetProperty("URLEncodeConv", "NONE", resolve);
				// 	} else {
				// 		CrossWebExWeb6.SetProperty("URLEncodeConv", "NONE", resolve);
				// 	}
				// // Character Encoding: EUC-KR
				// } else if (plainCharEncoding === "EUC-KR") {
				// 	// URL Encoding
				// 	if (plainURLEncoding) {
				// 		CrossWebExWeb6.SetProperty("URLEncodeConv", "EUCKR", resolve);
				// 	} else {
				// 		CrossWebExWeb6.SetProperty("URLEncodeConv", "NONE", resolve);
				// 	}
				// }
			}
		});
	};

	/************************************************************
	 * @brief		설정값에 따른 필요함수 호출
	 * @param		option.isHtml5
	 * @param		option.iniCache
	 * @param		option.filterCertByIssuer
	 * @param		option.langType
	 * @param		option.html5Lang
	 * @param		option.csLang
	 * @param		option.viewType
	 * @param		option.plainTextViewType
	 * @param		option.certUIMode
	 * @param		option.customBannerURL
	 * @param		option.useBanner
	 * @param		option.readyCallback
	 ************************************************************/
	function promiseSetPreEnv(option) {
		return new Promise(function (mainResolve, mainReject) {
			promiseWaitModuleLoad(option).then(function () {
				return promiseDownloadCertPolicy(option);
			}).then(function () {
				return promiseInitCache(option);
			}).then(function () {
				return promiseFilterIssuerDN(option);
			}).then(function () {
				return promiseFilterSerialNo(option);
			}).then(function () {
				return promiseFilterOIDAlias(option);
			}).then(function () {
				return promiseSetLang(option);
			}).then(function () {
				return promiseSetPlaintextViewType(option);
			}).then(function () {
				return promiseSetLogoPath(option);
			}).then(function () {
				return promiseDisableInvalidCert(option);
			}).then(function () {
				return promiseLoadCACert(option);
			}).then(function () {
				return promiseFilterOID(option);
			}).then(function () {
				return promiseSetProperty(option);
			}).then(function () {
				return promiseSetPlainEncoding(option);
			}).then(function () {
				return promiseFilterOU(option);
			}).then(function () {
				mainResolve();
			});
		});
	}

	/************************************************************
	 * @brief		deep copy
	 * @param		object
	 * @retval		deep copy 된 object
	 ************************************************************/
	function clone(obj) {

		if (null === obj || 'object' !== typeof obj)
			return obj;

		var cloneObj = obj.constructor();

		for (var prop in obj) {
			if (obj.hasOwnProperty(prop)) {
				cloneObj[prop] = clone(obj[prop]);
			}
		}

		return cloneObj;
	}

	/************************************************************
	 * @brief		인증서 캐쉬가 되어 있어도 비밀번호 입력창을 표시하도록 설정
	 * @param		option		옵션
	 ************************************************************/
	var promiseExtInitCache = function (option) {
		return new Promise(function (resolve, reject) {

			if (option.isHtml5) {
				resolve();
				} else {
				// 옵션을 먼저 설정
				if (option.extInitCache) {
					CrossWebExWeb6.ExtendMethod("InitCache", option.extInitCache, resolve);
				// 옵션이 없는 경우 정책으로 설정
				} else if (option.policy && option.policy.InitCache) {
					CrossWebExWeb6.ExtendMethod("InitCache", option.policy.InitCache, resolve);
				// 기타
			} else {
					CrossWebExWeb6.ExtendMethod("InitCache", "on", resolve);
				}
			}
		});
	};

	/************************************************************
	 * @brief		서명 형식 설정
	 * @param		option		옵션
	 ************************************************************/
	var promiseSetSignType = function (option) {
		return new Promise(function (resolveSignType, rejectSignType) {

			// HTML5 인 경우
			if (option.isHtml5) {
				resolveSignType();
				return;
			}

			// 금결원 전자서명 형식 설정 및 해제
			var promiseBTInitP7Msg = function () {
				return new Promise(function (resolve, reject) {
					var BTInitP7MsgValue = "0";

					if ("yessignP7" === option.signType)
						BTInitP7MsgValue = "1";

					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.setSharedAttribute("BTInitP7Msg", BTInitP7MsgValue, resolve);
					});
				});
			}

			// 전자서명 형식 설정
			var promiseP7SignDataBase64Dec = function () {
				return new Promise(function (resolve, reject) {

					if ("noplainP7" === option.signType) {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.SetProperty("P7SignDataNoPlain", "true", resolve);
						});
					} else if ("base64decP7" === option.signType) {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.SetProperty("P7SignDataBase64Dec", "true", resolve);
						});
					} else {
						resolve();
					}
				});
			};

			promiseBTInitP7Msg().then(function () {
				return promiseP7SignDataBase64Dec();
			}).then(function () {
				resolveSignType();
			});
		});
	};

	/************************************************************
	 * @brief		CrossWeb EX 함수
	 ************************************************************/
	/**
	 * INISAFE CrossWeb EX 인터페이스 함수
	 * @exports IniSafeCrossWebEx
	 * @namespace IniSafeCrossWebEx
	 */
	var Func = function () { }

	Func.prototype = {

		/**
		 * 언어설정
		 * @memberOf! IniSafeCrossWebEx#
		 * @param {Object} option	언어 설정 옵션 Object
		 * @param {Stirng} option.langType			"kor","eng", "chn"
		 * @param {Boolean} option.isHtml5			HTML5 모드
		 * @param {Function} option.processCallback	콜백 함수
		 * @returns		리턴 없음
		 */
		setLanguage: function (option) {

			var html5Lang = "", csLang = "";

			if ('undefined' !== typeof langType) {
				html5Lang = langType.toLowerCase();
				csLang = langType.toLowerCase();

				if ('undefined' === typeof isHtml5) {
					isHtml5 = baseOption.isHtml5;
				}

				if (isHtml5) {
					if ("kor" === html5Lang ||
						"eng" === html5Lang) {
						INI_LANGUAGE_HANDLE.setSystemLanguage(html5Lang);

						if ('function' === typeof callback) {
							callback(true);
							return;
						}
					}
				} else {
					if ("off" === csLang ||
						"kor" === csLang ||
						"chn" === csLang ||
						"eng" === csLang) {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.SetProperty("certmanui_language", csLang, callback);
						});
						return;
					}
				}
			}

			if ('function' === typeof callback) {
				callback(false);
				return;
			}
		},

		/**
		 * 로그인 함수
		 *
		 * @memberOf! IniSafeCrossWebEx#
		 * @param {Object}		option 					로그인 옵션 Object
		 * @param {String}		option.loginType		"sign" : 전자서명, "enc" : 암호화
		 * @param {String}		option.data				로그인 서명에 사용될 임의의 입력 값
		 * @param {String}		option.readForm			loginType : "enc" 일때 필수 입력
		 * @param {String}		option.sendForm			loginType : "enc" 일때 필수 입력
		 * @param {Function}	option.processCallback	콜백함수
		 * @param {Boolean}		option.isCmp 			인증서 갱신/폐기인지 로그인인지 확인용
		 * @param {Boolean}		option.isInnerView		인증서 제출 창을 메인 화면에 삽입할 지 여부(현재 사용 안함)
		 * @param {Boolean}		option.isNoViewSign		로그인 시 인증서 제출창 표시 여부
		 * @param {String}		option.defaultStorage	인증서 제출창 출력 시 기본으로 표시 될 저장소
		 * @param {Boolean}		option.vid				loginType : "sign" 일때 필수 입력(true/false)
		 * @returns 리턴 없음
		 */
		login: function (option) {

			if ('undefined' === typeof option.loginType) {
				return;
			}

			if ("sign" === option.loginType && 'undefined' === typeof option.vid) {
				return;
			}

			option = mergeOption(option);
			var data = makeData(option);

			var doLogin = function () {
				if ("sign" === option.loginType) {
					if (option.isHtml5) {
						//모비스처럼 사설인증서만 사용하는 경우에는 data에 "login"으로 설정해줘야 하고 아래 주석되어 있는 부분을 풀고 if(true===option.vid){ 부분을 주석처리
						//if ("login" === data) {
						  if(true === option.vid){
							Html5Adaptor.PKCS7SignedLogin(
								data,
								option.processCallback,
								data,
								option.isCmp,
								option.isNoViewSign,
								option.subaction,
								option.defaultStorage,
								option.vid
							);
						} else {
							Html5Adaptor.PKCS7SignedDataSign(
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage,
								option.vid,
								false,	// base64Dec
								option.subaction
							);
						}
					} else {
						if (true === option.vid) {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignVID(
									data,
									option.processCallback,
									data
								);
							});
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedData(
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
				}
				else if ("enc" === option.loginType) {
					if (option.isHtml5) {
						Html5Adaptor.EncFormVerify2(
							option.readForm,
							option.sendForm,
							option.processCallback,
							data,
							option.isNoViewSign
						);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.EncFormVerify2(
								option.readForm,
								option.sendForm,
								option.processCallback,
								data
							);
						});
					}
				}
				else if ("signkorea_sign" === option.loginType) {
					if (option.isHtml5) {
						if (true === option.vid) {
							Html5Adaptor.PKCS7SignKoreaLogin(
								data,
								option.processCallback,
								data,
								option.isCmp,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							Html5Adaptor.PKCS7SignKoreaData(
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage
							);
						}
					} else {
						if (true === option.vid) {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignVID(
									data,
									option.processCallback,
									data
								);
							});
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedData(
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				return promiseSetSignType(option);
			}).then(function () {
				doLogin();
			});
		},

		/**
		 * 전자서명 (전자서명+암호화는 API 내에서 해결하지 않고, API 조합하여 사용해야 함)
		 * 
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object} option				전자서명 설정 옵션 Object
		 * @param {String}	option.signType			전자서명 타입 : "P7", "yessignP7", "noplainP7", "base64decP7", "pdf"
		 * @param {String}	option.targetType		전자서명 원문 타입 : "data", "form"
		 * @param {Object}	option.form				targetType이 "form" 인 경우 서명할 원문 데이터
 		 * @param {String}	option.data			전자서명 원문 데이터
		 * @param {Function}	option.processCallback	전자서명 처리 결과를 받기 위한 콜백 함수
		 * @param {Boolean}	option.isInnerView		인증서 제출 창을 메인 화면에 삽입할 지 여부(현재 사용 안함)
 		 * @param {Boolean}	option.vid			본인확인 검증 사용 유/무
		 * @param {Boolean}	option.isCmp		인증서 갱신/폐기 여부
		 * @returns 리턴없음
		 */
		sign: function (option) {

			// 필수 option 체크
			if ('undefined' === typeof option.signType ||
				'undefined' === typeof option.targetType) {
				return;
			}

			option = mergeOption(option);
			var data = makeData(option);

			var doSign = function () {
				if ("data" === option.targetType) {
					if (("P7" === option.signType && 'undefined' !== typeof option.vid && false === option.vid) ||
						"noplainP7" === option.signType) {
						if (option.isHtml5) {
							if ('undefined' !== typeof option.useExtandOption && true === option.useExtandOption &&
								'undefined' !== typeof option.extandOption) {
								Html5Adaptor.PKCS7SignedDataWithOption(
									data,
									option.processCallback,
									data,
									option,
									option.isNoViewSign
								);
							}
							else {
								if(option.addPKCS7Sign == true) {
									Html5Adaptor.AddSignerSignedData(
										data,
										option.processCallback,
										data,
										option,
										option.isNoViewSign
									);	
								} else {
									Html5Adaptor.PKCS7SignedDataSign(
										data,
										option.processCallback,
										data,
										option.isInnerView,
										option.isNoViewSign,
										option.defaultStorage,
										option.vid,
										false	// base64Dec
									);
								}
							}
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								if(option.addPKCS7Sign == true) {
									CrossWebExWeb6.AddSignerSignedData(
										option.pkcs7SignedData,										
										option.vid,
										option.processCallback
									);
								} else {
									CrossWebExWeb6.PKCS7SignedData(
										data,
										option.processCallback,
										data,
										option.encodeCharSet
									);
								}
							});
						}
					}
					else if ("P7" === option.signType && 'undefined' !== typeof option.vid && true === option.vid) {
						if (option.isHtml5) {

							if ('undefined' !== typeof option.useExtandOption && true === option.useExtandOption &&
								'undefined' !== typeof option.extandOption) {
								Html5Adaptor.PKCS7SignedDataWithOption(
									data,
									option.processCallback,
									data,
									option,
									option.isNoViewSign
								);
							}
							else {
								if(option.addPKCS7Sign == true) {
									Html5Adaptor.AddSignerSignedData(
										data,
										option.pkcs7SignedData,
										option.processCallback,
										data,
										option,
										option.isNoViewSign
									);
								} else {
									Html5Adaptor.PKCS7SignedDataSign(
										data,
										option.processCallback,
										data,
										option.isInnerView,
										option.isNoViewSign,
										option.defaultStorage,
										option.vid,
										false	// base64Dec
									);
								}
							}

						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								if(option.addPKCS7Sign == true) {
									CrossWebExWeb6.AddSignerSignedData(
										option.pkcs7SignedData,										
										option.vid,
										option.processCallback
									);
								} else {
									CrossWebExWeb6.PKCS7SignVID(
										data,
										option.processCallback,
										data
									);
								}
							});
						}
					}
					else if ("yessignP7" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7YesSignData(
								data,
								option.processCallback,
								data,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedData(
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("pdf" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7PDFSignData(
								data,
								option.processCallback,
								data,
								false,
								option.isNoViewSign,
								option.defaultStorage,
								option.vid
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedDataWithMD(
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("multipdf" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7PDFSignData(
								data,
								option.processCallback,
								data,
								true,
								option.isNoViewSign,
								option.defaultStorage,
								option.vid
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedDataWithMDMulti(
									data,
									option.processCallback,
									data,
									option.vid,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("signkoreaP7" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7SignKoreaData(
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedData(
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("P1" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS1SignedDataSign(
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS1SignedData(
										data,
										option.processCallback,
										data,
										option.plainCharEncoding
									);
							});
						}
					}
					// [21.11.16] Namsu change - 'base64decP7' 설정을 WebUI에서도 처리할 수 있도록 수정
					else if ("base64decP7" === option.signType) {
						if (option.isHtml5) {
							if(option.addPKCS7Sign == true) {
								Html5Adaptor.AddSignerSignedData(
									data,
									option.processCallback,
									data,
									option,
									option.isNoViewSign
								);	
							} else {
								Html5Adaptor.PKCS7SignedDataSign(
									data,
									option.processCallback,
									data,
									option.isInnerView,
									option.isNoViewSign,
									option.defaultStorage,
									option.vid,
									true	// base64Dec
								);
							}
						}
						else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								if(option.addPKCS7Sign == true) {
									CrossWebExWeb6.AddSignerSignedData(
										option.pkcs7SignedData,										
										option.vid,
										option.processCallback
									);
								} else {
									CrossWebExWeb6.PKCS7SignedData(
										data,
										option.processCallback,
										data,
										option.encodeCharSet
									);
								}
							});
						}
					}
				}
				else if ("form" === option.targetType) {
					if (("P7" === option.signType && 'undefined' !== typeof option.vid && false === option.vid) ||
						"yessignP7" === option.signType ||
						"noplainP7" === option.signType ||
						"base64decP7" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7SignedDataForm(
								option.form,
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedDataForm(
									option.form,
									data,
									option.processCallback,
									data,
									option.isNoViewSign,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("P7" === option.signType && 'undefined' !== typeof option.vid && true === option.vid) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS7SignVIDFormLogin(
								option.form,
								data,
								option.processCallback,
								data,
								option.isCmp,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignVIDForm(
									option.form,
									data,
									option.processCallback,
									data
								);
							});
						}
					}
					else if ("pdf" === option.signType) {
						if (option.isHtml5) {
							// 없음
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS7SignedDataWithMDForm(
									option.form,
									data,
									option.processCallback,
									data,
									option.encodeCharSet
								);
							});
						}
					}
					else if ("P1" === option.signType) {
						if (option.isHtml5) {
							Html5Adaptor.PKCS1SignedDataForm(
								option.form,
								data,
								option.processCallback,
								data,
								option.isInnerView,
								option.isNoViewSign,
								option.defaultStorage
							);
						} else {
							// 설치 체크 및 정책 설정 대기
							cwModuleSetPropertyWait(function () {
								CrossWebExWeb6.PKCS1SignedDataForm(
									option.form,
									data,
									option.processCallback,
									data,
									option.plainCharEncoding
								);
							});
						}
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				return promiseExtInitCache(option);
			}).then(function () {
				return promiseSetSignType(option);
			}).then(function () {
				doSign();
			});
		},

		/**
		 * 다건 전자서명
 		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object} option	다건 전자서명 옵션 Object
		 * @param {String}		option.signType			전자서명 타입
		 * @param {String}		option.form				서명 대상 Form 명(Form에 PKCS7SignedData를 전송 할 필드로 일반적으로 사용함)
		 * @param {String}		option.dataArr			배열 형식의 서명 대상 원문
		 * @param {Function}		option.processCallback	전자서명 처리 결과를 받기 위한 콜백 함수
		 * @param {Boolean}		option.vid				본인확인 검증 사용 유/무
		 * @param {Boolean}		option.isInnerView		인증서 제출 창을 메인 화면에 삽입할 지 여부(현재 사용 안함)
		 * @returns 리턴없음
		 */
		multiSign: function (option) {

			// 필수 option 체크
			if ('undefined' === typeof option.signType) {
				return;
			}

			option = mergeOption(option);

			var doMultiSign = function () {
				// cs로 동작하는 경우 cwui를 로드하지 않기 때문에 아래 선언은 사용불가
				//var MULTI_DELIMITER = cwui.defaultConf.Signature.MultiDelimiter;

				// customerConf.Signature.MultiDelimiter와 동일해야 한다.
				var MULTI_DELIMITER = "-----------------------------------------";

				if (option.isHtml5) {
					// 문자열
					var data = '';

					if ('string' !== typeof option.dataArr) {
						var temp = '';

						for (var i = 0; i < option.dataArr.length; i++) {
							if ('' === temp) {
								temp = option.dataArr[i];
							} else {
								temp += MULTI_DELIMITER + option.dataArr[i];
							}
						}

						if ('' !== temp) {
							data = temp;
						}
					} else {
						data = option.dataArr;
					}

					if ("P7" === option.signType) {
						if ('undefined' !== typeof option.useExtandOption && true === option.useExtandOption &&
							'undefined' !== typeof option.extandOption) {
							Html5Adaptor.PKCS7SignedDataSignMulti(
								option.form,
								data,	// String
								option.processCallback,
								data,
								option.isInnerView,
								option,
								option.isNoViewSign,
								option.defaultStorage,
								option.vid,
								false	// base64Dec
							);
						} else {
							Html5Adaptor.PKCS7SignedDataSignMulti(
								option.form,
								data,	// String
								option.processCallback,
								data,
								option.isInnerView,
								null,
								option.isNoViewSign,
								option.defaultStorage,
								option.vid,
								false	// base64Dec
							);
						}
					} else if ("yessignP7" === option.signType) {
						Html5Adaptor.PKCS7YesSignDataMulti(
							option.form,
							data,	// String
							option.processCallback,
							data,
							option.isNoViewSign,
							option.defaultStorage
						);
					// [21.11.16] Namsu add - 'base64decP7' 설정을 처리할 수 있도록 추가
					} else if ("base64decP7" === option.signType) {
						Html5Adaptor.PKCS7SignedDataSignMulti(
							option.form,
							data,	// String
							option.processCallback,
							data,
							option.isInnerView,
							null,
							option.isNoViewSign,
							option.defaultStorage,
							option.vid,
							true	// base64Dec
						);
					}

				} else {
					// 배열
					var dataArr;

					if ('string' === typeof option.dataArr) {
						dataArr = option.dataArr.split(MULTI_DELIMITER);

					} else {
						dataArr = option.dataArr;
					}

					var viewStr = '';

					for (var i = 0; i < dataArr.length; i++) {
						if ('' !== viewStr) {
							viewStr += '&';
						}

						viewStr += '#' + parseInt(i + 1) + '= &';	// 각 원문을 구분한다.(변경가능)
						viewStr += dataArr[i];
					}

					dataArr.unshift(viewStr);	// 맨 앞에 조립된 원문을 넣어준다.(CS 화면표시용)

					if (true === option.vid) {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.PKCS7SignedDataWithVIDMultiFormV2(
								option.form,
								dataArr,	// Array
								option.processCallback
							);
						});
					} else if (false === option.vid) {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.PKCS7SignedDataMultiFormV2(
								option.form,
								dataArr,	// Array
								option.processCallback
							);
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				return promiseExtInitCache(option);
			}).then(function () {
				return promiseSetSignType(option);
			}).then(function () {
				doMultiSign();
			});
		},

		/************************************************************
		 * @brief		암호화
		 * @param		option.targetType			["data", "form"]
		 * @param		option.readForm
		 * @param		option.sendForm
		 * @param		option.processCallback

		 * @param		option.targetFormName
		 * @param		option.targetFieldCss
		 * 			or
		 * @param		option.data
		 ************************************************************/
		enc: function (option) {

			if ('undefined' === typeof option.targetType) {
				return;
			}

			option = mergeOption(option);
			var data = makeData(option);

			var doEnc = function () {
				if ("data" === option.targetType) {
					if (option.isHtml5) {
						// 없음
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.EncParams(
								data,
								option.processCallback,
								data
							);
						});
					}
				}
				else if ("form" === option.targetType) {
					if (option.isHtml5) {
						Html5Adaptor.EncForm2(
							option.readForm,
							option.sendForm,
							option.processCallback,
							data
						);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.EncForm2(
								option.readForm,
								option.sendForm,
								option.processCallback,
								data
							);
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				doEnc();
			});
		},

		/**
		 * 공인인증서 발급 함수
		 * @memberOf! IniSafeCrossWebEx#
		 * 
		 * @param {Object}		option						공인인증서 발급 시 사용되는 옵션 Object
		 * @param {String}		option.caName				발급기관
		 * @param {String}		option.szRef       			참조코드
		 * @param {String}		option.szCode        		인가코드
		 * @param {Fucntion}	option.processCallback    	인증서 발급 결과를 처리하기 위한 콜백 함수
		 * @returns 리턴없음
		 */
		issueCertificate: function (option) {

			option = mergeOption(option);
			var doIssueCertificate = function () {
				if (option.isHtml5) {
					Html5Adaptor.IssueCertificate(
						option.caName,
						option.szRef,
						option.szCode,
						option.processCallback,
						option.certId,
						option.defaultStorage
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.IssueCertificate(
							option.caName,
							option.szRef,
							option.szCode,
							option.processCallback
						);
					});

				}
			};

			promiseSetPreEnv(option).then(function () {
				doIssueCertificate();
			});
		},

		/**
		 * 사설 인증서 발급 함수
		 * @memberOf! IniSafeCrossWebEx#
		 * 
		 * @param {Object} 			option						사설인증서 발급 시 사용되는 옵션 Object
		 * @param {Function}		option.processCallback    	인증서 발급 결과를 처리하기 위한 콜백함수
		 * @returns 리턴없음
		 */
		issueCertificate_INITECH: function (option) {

			option = mergeOption(option);

			var doIssueCertificate_INITECH = function () {
				if (option.isHtml5) {
					Html5Adaptor.IssueCertificate_INITECH(
						option,
						option.processCallback
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.INITECHCA_IssueCertificate_v7(
							option,
							option.processCallback
						);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doIssueCertificate_INITECH();
			});
		},

		/**
		 * 공인인증서 재발급 함수
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object} 		option						인증서 재발급에 사용되는 옵션 Object
		 * @param {String}		option.caName				발급기관
		 * @param {String}		option.szRef       			참조코드
		 * @param {String}		option.szCode        		인가코드
		 * @param {Function}	option.processCallback    	인증서 재발급 콜백함수
		 * @returns 리턴없음
		 */
		reissueCertificate: function (option) {

			option = mergeOption(option);

			var doReissueCertificate = function () {
				if (option.isHtml5) {
					Html5Adaptor.ReIssueCertificate(
						option.caName,
						option.szRef,
						option.szCode,
						option.processCallback,
						option.certId,
						option.defaultStorage
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.ReIssueCertificate(
							option.caName,
							option.szRef,
							option.szCode,
							option.processCallback
						);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doReissueCertificate();
			});
		},

		/**
		 * 사설인증서 갱신 함수
		 * @memberOf! IniSafeCrossWebEx#
		 * 
		 * @param {Object} 		option						사설 인증서 갱신에 사용되는 옵션 Object
		 * @param {String}		option.caName				발급기관
		 * @param {Function}	option.processCallback    	인증서 갱신 콜백함수
		 * @param {String}		option.REGNO				주민번호
		 * @param {String}		option.USERID				사이트 아이디
		 * @param {String}		option.DETAILNAME			고객명
		 * @param {Number}		option_KEYBITS				key_bits
		 * @param {String}		option.ACTIONCODE			동작 타입
		 * @returns 리턴없음
		 */
		updateCertificate_INITECH: function (option) {

			option = mergeOption(option);

			var doUpdateCertificate = function () {
				if (option.isHtml5) {
					Html5Adaptor.UpdateCertificate_INITECH(
						option,
						option.processCallback
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.INITECHCA_IssueCertificate_v7(
							option,
							option.processCallback
						);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doUpdateCertificate();
			});
		},

		/**
		 * 공인인증서 갱신 함수
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object} 		option						공인인증서 갱신에 사용되는 옵션 Object
		 * @param {String}		option.caName				발급기관
		 * @param {Function}	option.processCallback    	인증서 갱신 콜백함수
		 * @returns 리턴없음
		 */
		updateCertificate: function (option) {

			option = mergeOption(option);

			var doUpdateCertificate = function () {
				if (option.isHtml5) {
					Html5Adaptor.UpdateCertificate(
						option.caName,
						option.processCallback,
						option.certId,
						option.defaultStorage
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.UpdateCertificate(
							option.caName,
							option.processCallback
						);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doUpdateCertificate();
			});
		},

		/**
		 * 공인/사설 인증서 폐기 함수
		 * @memberOf! IniSafeCrossWebEx#
		 * @param {Object}		option						인증서 폐기 시 사용되는 옵션 Object
		 * @param {String}		option.serial				인증서 시리얼 번호
		 * @param {Function}	option.processCallback    	인증서 폐기 콜백함수
		 * @returns 리턴없음
		 */
		revokeCertificate: function (option) {

			option = mergeOption(option);

			var doRevokeCertificate = function () {
				if (option.isHtml5) {
					Html5Adaptor.RevokeCertificate(
						option.caName,
						option.serial,
						option.processCallback,
						option.defaultStorage
					);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.RevokeCertificate(
							option.caName,
							option.serial,
							option.processCallback
						);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doRevokeCertificate();
			});
		},

		/**
		 * 공인/사설 인증서를 관리 하는 함수
		 * @memberOf! IniSafeCrossWebEx#
		 * @param {Object}		option		인증서 관리에 사용될 옵션 Object
		 * @param {String}		option.taskNm				인증서 관리 메뉴 개별 선택 (only html5)
		 * @param {Function}	option.processCallback    	인증서 관리 처리 결과를 받는 콜백함수
		 * @returns 리턴없음
		 */
		openCertManager: function (option) {

			option = mergeOption(option);

			var doOpenCertManager = function () {
				if (option.isHtml5) {
					Html5Adaptor.CertManagerWithForm(option.taskNm, option.processCallback, option.defaultStorage);
				} else {
					// 설치 체크 및 정책 설정 대기
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.ManageCert(option.processCallback);
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doOpenCertManager();
			});
		},

		/**
		 * 기기간 인증서 가져오기
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object}		option			인증서 가져오기 시 사용되는 옵션 Object
		 * @param {String}		option.version	중계 서버 버전
		 * @param {function}	callback		결과 콜백 (version 1.2 only)
		 * 
		 * @returns 리턴없음
		 */
		importCert: function (option, callback) {

			option = mergeOption(option);

			if ('undefined' === typeof option.version)
				return;

			var doImportCert = function () {
				if ("1.1" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertImportV11WithForm();
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertImportV11WithForm();
						});
					}
				} else if ("1.2" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertImportV12WithForm(option, callback);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertImportV12WithForm();
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				doImportCert();
			});
		},

		/**
		 * 기기간 인증서 내보내기
		 * @memberOf! IniSafeCrossWebEx#
		 * 
		 * @param {Object}		option			기기간 인증서 내보내기 시 사용되는 옵션 Object
		 * @param {String}		option.version	버전
		 * @param {function}	callback		결과 콜백 (version 1.2 only)
		 * 
		 * @returns 리턴없음
		 */
		exportCert: function (option, callback) {

			option = mergeOption(option);

			if ('undefined' === typeof option.version)
				return;

			var doExportCert = function () {
				if ("1.1" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertExportV11WithForm();
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertExportV11WithForm();
						});
					}
				} else if ("1.2" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertExportV12WithForm(option, callback);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertExportV12WithForm();
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				doExportCert();
			});
		},

		/**
		 * 브라우저간 인증서 가져오기
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object}		option			브라우저간 인증서 가져오기 시 사용되는 옵션 Object
		 * @param {String}		option.version	버전
		 * @param {function}	callback		결과 콜백 (version 1.2 only)
		 * 
		 * @returns 리턴없음
		 */
		importBrowserWebCert: function (option, callback) {

			option = mergeOption(option);

			if ('undefined' === typeof option.version)
				return;

			var doImportCert = function () {
				if ("1.1" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertImportV11WithForm();
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertImportV11WithForm();
						});
					}
				} else if ("1.2" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertImportBrowserV12WithForm(option, callback);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertImportV12WithForm();
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				doImportCert();
			});
		},

		/**
		 * 브라우저간 인증서 내보내기
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object}		option			브라우저간 인증서 내보내기 시 사용되는 옵션 Object
		 * @param {String}		option.version	버전
		 * @param {function}	callback		결과 콜백 (version 1.2 only)
		 * 
		 * @returns 리턴없음
		 */
		exportBrowserWebCert: function (option, callback) {

			option = mergeOption(option);

			if ('undefined' === typeof option.version)
				return;

			var doExportCert = function () {
				if ("1.1" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertExportV11WithForm();
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertExportV11WithForm();
						});
					}
				} else if ("1.2" === option.version) {

					if (option.isHtml5) {
						Html5Adaptor.CertExportBrowserV12WithForm(option, callback);
					} else {
						// 설치 체크 및 정책 설정 대기
						cwModuleSetPropertyWait(function () {
							CrossWebExWeb6.CertExportV12WithForm();
						});
					}
				}
			};

			promiseSetPreEnv(option).then(function () {
				doExportCert();
			});
		},

		/**
		 * 금결원(yessign) 클라우드에 저장된 인증서 가져오기 (클라우드 > 로컬)
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object}		option						클라우드에서 인증서 가져오기 시 사용되는 옵션 Object
		 * @param {Object}		option.filterCertOU			금결원 3년짜리 인증서만 리스트 창에 보이게 하는 설정
		 * @param {Boolean}		option.filterCertOU.enable	필터 사용 여부		
		 * @param {String}		option.filterCertOU.list	"personalB|corporation4ECB"
		 * @param {Function}	option.processCallback		클라우드에서 인증서 가져오기 처리 결과를 받는 콜백함수
		 * @returns 리턴없음
		 */
		importCloudCert: function (option) {
			// 옵션 머지
			option = mergeOption(option);
			// 클라우드 인증서 가져오기
			promiseSetPreEnv(option).then(function () {
				Html5Adaptor.ImportCloudCert(option.processCallback);
			});
			
		},

		/**
		 * 금결원(yessign) 클라우드로 인증서 내보내기 (로컬 > 클라우드)
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Objet}	 	option					클라우드로 인증서를 내보낼 때 사용되는 옵션 Object
		 * @param {Function}	option.processCallback	클라우드에 인증서 내보낸 처리 결과를 받는 콜백함수
		 * 
		 * @returns 리턴없음
		 */
		exportCloudCert: function (option) {
			// 옵션 머지
			option = mergeOption(option);
			// 클라우드 인증서 내보내기
			promiseSetPreEnv(option).then(function () {
				Html5Adaptor.ExportCloudCert(option.processCallback);
			});
		},

		/**
		 * 금결원(yessign) 클라우드 서비스 사용 설정
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {String} use	클라우드 서비스 사용 여부 설정 : "Y", "N", (설정 값 없으면 '사용함'으로 설정 됨)
		 * @returns 리턴없음
		 */
		setUseCloudservice: function (use) {
			if(use){
				Html5Adaptor.setUseOpenstorage(use);
			}
			else{
				Html5Adaptor.setUseOpenstorage("Y");
			}
			
		},

		/**
		 * 비밀번호 재입력 제한 횟수가 초과 된 인증서 정보를 취득하는 함수
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Object}		option	옵션 Object
		 * @param {Function}	option.processCallback		재시도 횟수 초과 된 인증서를 처리하기 위한 콜백함수
		 * @returns 리턴없음
		 */
		getOverRetryCertInfo: function (option) {
			option = mergeOption(option);

			var doGetOverRetryCertInfo = function () {
				if(option.isHtml5) {
					Html5Adaptor.getOverRetryCertInfo(option.processCallback);
				} else {
					cwModuleSetPropertyWait(function () {
						CrossWebExWeb6.ExtendMethod("GetLastWrongPasswordCount", "", function(result) {
							var wrongCnt = result;
							CrossWebExWeb6.ExtendMethod("GetOverWrongCertInfo","", function(result) {
								var wrongCert = {};
								wrongCert[result] = wrongCnt;

								option.processCallback(wrongCert);
							});
						});
					});
				}
			};

			promiseSetPreEnv(option).then(function () {
				doGetOverRetryCertInfo();
			});
		},

		/************************************************************
		 * @brief		정책 설정
		 * @param		option.name					이름
		 * @param		option.value				값
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		setProperty: function (option) {

			option = mergeOption(option);

			if (false == option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.SetProperty(option.name, option.value, option.processCallback);
				});
			}
		},

		/************************************************************
		 * @brief		프로세스 공유 속성 설정
		 * @param		option.name					이름
		 * @param		option.value				값
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		setSharedAttribute: function (option) {

			option = mergeOption(option);

			if (false == option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.setSharedAttribute(option.name, option.value, option.processCallback);
				});
			}
		},

		/************************************************************
		 * @brief		확장 함수
		 * @param		option.name					이름
		 * @param		option.value				값
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		extendMethod: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.ExtendMethod(option.name, option.value, option.processCallback);
				});
			}
		},

		/************************************************************
		 * @brief		파일 선택
		 * @param		option.filePath				선택 파일 경로
		 ************************************************************/
		selectFile: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.SelFile(option.filePath);
				});
			}
		},

		/************************************************************
		 * @brief		암호화 파일 업로드
		 * @param		option.url					업로드 URL
		 * @param		option.form					?
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		uploadEncFile: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.EncFile(
						option.url,
						option.form,
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		암호화 파일 다운로드
		 * @param		option.url					다운로드 URL
		 * @param		option.args					?
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		downloadEncFile: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.EncDown(
						option.url,
						option.args,
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		사설 인증서 발급
		 * @param		option.frm					?
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		requestCert: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.CertRequest(
						option.frm,
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		사용자 인증서 추가
		 * @param		option.cert					?
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		insertUserCert: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.InsertUserCert(
						option.cert,
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		사용자 인증서 삭제
		 * @param		option.cert					?
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		deleteUserCert: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.DeleteUserCert(
						option.cert,
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		인증서 추가
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		insertCertToMS: function (option) {

			option = mergeOption(option);

			if (false === option.isHtml5) {
				// 설치 체크 및 정책 설정 대기
				cwModuleSetPropertyWait(function () {
					CrossWebExWeb6.InsertCerttoMS(
						option.processCallback
					);
				});
			}
		},

		/************************************************************
		 * @brief		HTML5 인터페이스 호출
		 * @param		option.params				HTML5 인터페이스 파라미터
		 * @param		option.processCallback		콜백함수
		 ************************************************************/
		requestCmd: function (option) {

			// 설치 체크 대기
			cwModuleInstallCheck(function () {
				CrossWebExWeb6.CWEXRequestCmd(
					option.params,
					option.processCallback
				);
			});
		},

		/************************************************************
		 * @brief		INIWEBEX 모듈로드 확인
		 * @param		callback		콜백함수
		 ************************************************************/
		/**
		 * IniSafeCrossWebEx 관련 스크립트 및 3rd party 모듈 로드 완료 확인 함수
		 * @memberOf! IniSafeCrossWebEx#
		 *
		 * @param {Function} callback	IniSafeCrossWebEx 모듈 로드가 완료되면 처리 할 콜백 함수
		 * @returns 리턴없음
		 */
		isReady: function (callback) {

			var waitLoad = function () {
				if (true === GINI_DYNAMIC_LOAD.isCompleted() && true === GINI_DYNAMIC_LOAD.isThirdPartyCompleted()) {
					if (callback)
						callback();
				} else {
					setTimeout(function () {
						waitLoad();
					}, 100);
				}
			};
			waitLoad();
		}

	};

	return Func;

}();

var INIWEBEX = new IniSafeCrossWebEx();
